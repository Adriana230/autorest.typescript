/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const ErrorModel = {
  required: false,
  serializedName: 'Error',
  type: {
    name: 'Composite',
    className: 'ErrorModel',
    modelProperties: {
      status: {
        xmlName: 'status',
        required: false,
        serializedName: 'status',
        type: {
          name: 'Number'
        }
      },
      message: {
        xmlName: 'message',
        required: false,
        serializedName: 'message',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const Slide = {
  required: false,
  serializedName: 'Slide',
  type: {
    name: 'Composite',
    className: 'Slide',
    modelProperties: {
      type: {
        xmlIsAttribute: true,
        xmlName: 'type',
        required: false,
        serializedName: 'type',
        type: {
          name: 'String'
        }
      },
      title: {
        xmlName: 'title',
        required: false,
        serializedName: 'title',
        type: {
          name: 'String'
        }
      },
      items: {
        xmlName: 'items',
        xmlElementName: 'item',
        required: false,
        serializedName: 'items',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const Slideshow = {
  required: false,
  serializedName: 'Slideshow',
  type: {
    name: 'Composite',
    className: 'Slideshow',
    modelProperties: {
      title: {
        xmlIsAttribute: true,
        xmlName: 'title',
        required: false,
        serializedName: 'title',
        type: {
          name: 'String'
        }
      },
      date: {
        xmlIsAttribute: true,
        xmlName: 'date',
        required: false,
        serializedName: 'date',
        type: {
          name: 'String'
        }
      },
      author: {
        xmlIsAttribute: true,
        xmlName: 'author',
        required: false,
        serializedName: 'author',
        type: {
          name: 'String'
        }
      },
      slides: {
        xmlName: 'slides',
        xmlElementName: 'slide',
        required: false,
        serializedName: 'slides',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'SlideElementType',
              type: {
                name: 'Composite',
                className: 'Slide'
              }
          }
        }
      }
    }
  }
};

export const AppleBarrel = {
  required: false,
  serializedName: 'AppleBarrel',
  type: {
    name: 'Composite',
    className: 'AppleBarrel',
    modelProperties: {
      goodApples: {
        xmlIsWrapped: true,
        xmlName: 'GoodApples',
        xmlElementName: 'Apple',
        required: false,
        serializedName: 'GoodApples',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      badApples: {
        xmlIsWrapped: true,
        xmlName: 'BadApples',
        xmlElementName: 'Apple',
        required: false,
        serializedName: 'BadApples',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const Banana = {
  required: false,
  serializedName: 'Banana',
  type: {
    name: 'Composite',
    className: 'Banana',
    modelProperties: {
      name: {
        xmlName: 'name',
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      flavor: {
        xmlName: 'flavor',
        required: false,
        serializedName: 'flavor',
        type: {
          name: 'String'
        }
      },
      expiration: {
        xmlName: 'expiration',
        required: false,
        serializedName: 'expiration',
        type: {
          name: 'DateTime'
        }
      }
    }
  }
};
