"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorModel = {
    required: false,
    serializedName: 'Error',
    type: {
        name: 'Composite',
        className: 'ErrorModel',
        modelProperties: {
            status: {
                required: false,
                serializedName: 'status',
                type: {
                    name: 'Number'
                }
            },
            message: {
                required: false,
                serializedName: 'message',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.AutoRestUrlTestServiceOptions = {
    required: false,
    type: {
        name: 'Composite',
        className: 'AutoRestUrlTestServiceOptions',
        modelProperties: {
            globalStringQuery: {
                required: false,
                serializedName: 'globalStringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.QueriesGetBooleanNullOptionalParams = {
    required: false,
    serializedName: 'GetBooleanNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesGetBooleanNullOptionalParams',
        modelProperties: {
            boolQuery: {
                required: false,
                serializedName: 'boolQuery',
                type: {
                    name: 'Boolean'
                }
            }
        }
    }
};
exports.QueriesGetIntNullOptionalParams = {
    required: false,
    serializedName: 'GetIntNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesGetIntNullOptionalParams',
        modelProperties: {
            intQuery: {
                required: false,
                serializedName: 'intQuery',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.QueriesGetLongNullOptionalParams = {
    required: false,
    serializedName: 'GetLongNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesGetLongNullOptionalParams',
        modelProperties: {
            longQuery: {
                required: false,
                serializedName: 'longQuery',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.QueriesFloatNullOptionalParams = {
    required: false,
    serializedName: 'FloatNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesFloatNullOptionalParams',
        modelProperties: {
            floatQuery: {
                required: false,
                serializedName: 'floatQuery',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.QueriesDoubleNullOptionalParams = {
    required: false,
    serializedName: 'DoubleNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesDoubleNullOptionalParams',
        modelProperties: {
            doubleQuery: {
                required: false,
                serializedName: 'doubleQuery',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.QueriesStringNullOptionalParams = {
    required: false,
    serializedName: 'StringNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesStringNullOptionalParams',
        modelProperties: {
            stringQuery: {
                required: false,
                serializedName: 'stringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.QueriesEnumValidOptionalParams = {
    required: false,
    serializedName: 'EnumValidOptions',
    type: {
        name: 'Composite',
        className: 'QueriesEnumValidOptionalParams',
        modelProperties: {
            enumQuery: {
                required: false,
                serializedName: 'enumQuery',
                type: {
                    name: 'Enum',
                    allowedValues: ['red color', 'green color', 'blue color']
                }
            }
        }
    }
};
exports.QueriesEnumNullOptionalParams = {
    required: false,
    serializedName: 'EnumNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesEnumNullOptionalParams',
        modelProperties: {
            enumQuery: {
                required: false,
                serializedName: 'enumQuery',
                type: {
                    name: 'Enum',
                    allowedValues: ['red color', 'green color', 'blue color']
                }
            }
        }
    }
};
exports.QueriesByteMultiByteOptionalParams = {
    required: false,
    serializedName: 'ByteMultiByteOptions',
    type: {
        name: 'Composite',
        className: 'QueriesByteMultiByteOptionalParams',
        modelProperties: {
            byteQuery: {
                required: false,
                serializedName: 'byteQuery',
                type: {
                    name: 'ByteArray'
                }
            }
        }
    }
};
exports.QueriesByteNullOptionalParams = {
    required: false,
    serializedName: 'ByteNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesByteNullOptionalParams',
        modelProperties: {
            byteQuery: {
                required: false,
                serializedName: 'byteQuery',
                type: {
                    name: 'ByteArray'
                }
            }
        }
    }
};
exports.QueriesDateNullOptionalParams = {
    required: false,
    serializedName: 'DateNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesDateNullOptionalParams',
        modelProperties: {
            dateQuery: {
                required: false,
                serializedName: 'dateQuery',
                type: {
                    name: 'Date'
                }
            }
        }
    }
};
exports.QueriesDateTimeNullOptionalParams = {
    required: false,
    serializedName: 'DateTimeNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesDateTimeNullOptionalParams',
        modelProperties: {
            dateTimeQuery: {
                required: false,
                serializedName: 'dateTimeQuery',
                type: {
                    name: 'DateTime'
                }
            }
        }
    }
};
exports.QueriesArrayStringCsvValidOptionalParams = {
    required: false,
    serializedName: 'ArrayStringCsvValidOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringCsvValidOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.QueriesArrayStringCsvNullOptionalParams = {
    required: false,
    serializedName: 'ArrayStringCsvNullOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringCsvNullOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.QueriesArrayStringCsvEmptyOptionalParams = {
    required: false,
    serializedName: 'ArrayStringCsvEmptyOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringCsvEmptyOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.QueriesArrayStringSsvValidOptionalParams = {
    required: false,
    serializedName: 'ArrayStringSsvValidOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringSsvValidOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.QueriesArrayStringTsvValidOptionalParams = {
    required: false,
    serializedName: 'ArrayStringTsvValidOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringTsvValidOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.QueriesArrayStringPipesValidOptionalParams = {
    required: false,
    serializedName: 'ArrayStringPipesValidOptions',
    type: {
        name: 'Composite',
        className: 'QueriesArrayStringPipesValidOptionalParams',
        modelProperties: {
            arrayQuery: {
                required: false,
                serializedName: 'arrayQuery',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
exports.PathItemsGetAllWithValuesOptionalParams = {
    required: false,
    serializedName: 'GetAllWithValuesOptions',
    type: {
        name: 'Composite',
        className: 'PathItemsGetAllWithValuesOptionalParams',
        modelProperties: {
            localStringQuery: {
                required: false,
                serializedName: 'localStringQuery',
                type: {
                    name: 'String'
                }
            },
            pathItemStringQuery: {
                required: false,
                serializedName: 'pathItemStringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PathItemsGetGlobalQueryNullOptionalParams = {
    required: false,
    serializedName: 'GetGlobalQueryNullOptions',
    type: {
        name: 'Composite',
        className: 'PathItemsGetGlobalQueryNullOptionalParams',
        modelProperties: {
            localStringQuery: {
                required: false,
                serializedName: 'localStringQuery',
                type: {
                    name: 'String'
                }
            },
            pathItemStringQuery: {
                required: false,
                serializedName: 'pathItemStringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PathItemsGetGlobalAndLocalQueryNullOptionalParams = {
    required: false,
    serializedName: 'GetGlobalAndLocalQueryNullOptions',
    type: {
        name: 'Composite',
        className: 'PathItemsGetGlobalAndLocalQueryNullOptionalParams',
        modelProperties: {
            localStringQuery: {
                required: false,
                serializedName: 'localStringQuery',
                type: {
                    name: 'String'
                }
            },
            pathItemStringQuery: {
                required: false,
                serializedName: 'pathItemStringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PathItemsGetLocalPathItemQueryNullOptionalParams = {
    required: false,
    serializedName: 'GetLocalPathItemQueryNullOptions',
    type: {
        name: 'Composite',
        className: 'PathItemsGetLocalPathItemQueryNullOptionalParams',
        modelProperties: {
            localStringQuery: {
                required: false,
                serializedName: 'localStringQuery',
                type: {
                    name: 'String'
                }
            },
            pathItemStringQuery: {
                required: false,
                serializedName: 'pathItemStringQuery',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map