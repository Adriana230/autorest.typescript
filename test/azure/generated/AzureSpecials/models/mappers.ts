/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import {CloudErrorMapper, BaseResourceMapper } from "ms-rest-azure-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorModel = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      status: {
  serializedName: "status",
  type: {
    name: "Number"
  }
},
      constantId: {
  required: true,
  isConstant: true,
  serializedName: "constantId",
  defaultValue: 1,
  type: {
    name: "Number"
  }
},
      message: {
  serializedName: "message",
  type: {
    name: "String"
  }
}
    }
  }
};

export const OdataFilter = {
  serializedName: "OdataFilter",
  type: {
    name: "Composite",
    className: "OdataFilter",
    modelProperties: {
      id: {
  serializedName: "id",
  type: {
    name: "Number"
  }
},
      name: {
  serializedName: "name",
  type: {
    name: "String"
  }
}
    }
  }
};

export const HeaderCustomNamedRequestIdParamGroupingParameters = {
  type: {
    name: "Composite",
    className: "HeaderCustomNamedRequestIdParamGroupingParameters",
    modelProperties: {
      fooClientRequestId: {
  required: true,
  type: {
    name: "String"
  }
}
    }
  }
};

export const ApiVersionLocalGetMethodLocalNullOptionalParams = {
  serializedName: "GetMethodLocalNullOptions",
  type: {
    name: "Composite",
    className: "ApiVersionLocalGetMethodLocalNullOptionalParams",
    modelProperties: {
      apiVersion: {
  serializedName: "api-version",
  type: {
    name: "String"
  }
}
    }
  }
};

export const SkipUrlEncodingGetMethodQueryNullOptionalParams = {
  serializedName: "GetMethodQueryNullOptions",
  type: {
    name: "Composite",
    className: "SkipUrlEncodingGetMethodQueryNullOptionalParams",
    modelProperties: {
      q1: {
  serializedName: "q1",
  type: {
    name: "String"
  }
}
    }
  }
};

export const OdataGetWithFilterOptionalParams = {
  serializedName: "GetWithFilterOptions",
  type: {
    name: "Composite",
    className: "OdataGetWithFilterOptionalParams",
    modelProperties: {
      filter: {
  serializedName: "$filter",
  type: {
    name: "String"
  }
},
      top: {
  serializedName: "$top",
  type: {
    name: "Number"
  }
},
      orderby: {
  serializedName: "$orderby",
  type: {
    name: "String"
  }
}
    }
  }
};

export const HeaderCustomNamedRequestIdHeaders = {
  serializedName: "header-customnamedrequestid-headers",
  type: {
    name: "Composite",
    className: "HeaderCustomNamedRequestIdHeaders",
    modelProperties: {
      fooRequestId: {
  serializedName: "foo-request-id",
  type: {
    name: "String"
  }
}
    }
  }
};

export const HeaderCustomNamedRequestIdParamGroupingHeaders = {
  serializedName: "header-customnamedrequestidparamgrouping-headers",
  type: {
    name: "Composite",
    className: "HeaderCustomNamedRequestIdParamGroupingHeaders",
    modelProperties: {
      fooRequestId: {
  serializedName: "foo-request-id",
  type: {
    name: "String"
  }
}
    }
  }
};

export const HeaderCustomNamedRequestIdHeadHeaders = {
  serializedName: "header-customnamedrequestidhead-headers",
  type: {
    name: "Composite",
    className: "HeaderCustomNamedRequestIdHeadHeaders",
    modelProperties: {
      fooRequestId: {
  serializedName: "foo-request-id",
  type: {
    name: "String"
  }
}
    }
  }
};
