"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.ErrorModel = {
    required: false,
    serializedName: 'Error',
    type: {
        name: 'Composite',
        className: 'ErrorModel',
        modelProperties: {
            status: {
                required: false,
                serializedName: 'status',
                type: {
                    name: 'Number'
                }
            },
            message: {
                required: false,
                serializedName: 'message',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.ParameterGroupingPostRequiredParameters = {
    required: false,
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostRequiredParameters',
        modelProperties: {
            body: {
                required: true,
                type: {
                    name: 'Number'
                }
            },
            customHeader: {
                required: false,
                type: {
                    name: 'String'
                }
            },
            query: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            },
            path: {
                required: true,
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.ParameterGroupingPostOptionalParameters = {
    required: false,
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostOptionalParameters',
        modelProperties: {
            customHeader: {
                required: false,
                type: {
                    name: 'String'
                }
            },
            query: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.FirstParameterGroup = {
    required: false,
    type: {
        name: 'Composite',
        className: 'FirstParameterGroup',
        modelProperties: {
            headerOne: {
                required: false,
                type: {
                    name: 'String'
                }
            },
            queryOne: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.ParameterGroupingPostMultiParamGroupsSecondParamGroup = {
    required: false,
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostMultiParamGroupsSecondParamGroup',
        modelProperties: {
            headerTwo: {
                required: false,
                type: {
                    name: 'String'
                }
            },
            queryTwo: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.ParameterGroupingPostOptionalOptionalParams = {
    required: false,
    serializedName: 'PostOptionalOptions',
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostOptionalOptionalParams',
        modelProperties: {
            parameterGroupingPostOptionalParameters: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'ParameterGroupingPostOptionalParameters'
                }
            }
        }
    }
};
exports.ParameterGroupingPostMultiParamGroupsOptionalParams = {
    required: false,
    serializedName: 'PostMultiParamGroupsOptions',
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostMultiParamGroupsOptionalParams',
        modelProperties: {
            firstParameterGroup: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'FirstParameterGroup'
                }
            },
            parameterGroupingPostMultiParamGroupsSecondParamGroup: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'ParameterGroupingPostMultiParamGroupsSecondParamGroup'
                }
            }
        }
    }
};
exports.ParameterGroupingPostSharedParameterGroupObjectOptionalParams = {
    required: false,
    serializedName: 'PostSharedParameterGroupObjectOptions',
    type: {
        name: 'Composite',
        className: 'ParameterGroupingPostSharedParameterGroupObjectOptionalParams',
        modelProperties: {
            firstParameterGroup: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'FirstParameterGroup'
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map