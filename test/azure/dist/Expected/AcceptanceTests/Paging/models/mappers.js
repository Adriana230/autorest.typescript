"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.ProductProperties = {
    required: false,
    serializedName: 'Product_properties',
    type: {
        name: 'Composite',
        className: 'ProductProperties',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'Number'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.Product = {
    required: false,
    serializedName: 'Product',
    type: {
        name: 'Composite',
        className: 'Product',
        modelProperties: {
            properties: {
                required: false,
                serializedName: 'properties',
                type: {
                    name: 'Composite',
                    className: 'ProductProperties'
                }
            }
        }
    }
};
exports.OperationResult = {
    required: false,
    serializedName: 'OperationResult',
    type: {
        name: 'Composite',
        className: 'OperationResult',
        modelProperties: {
            status: {
                required: false,
                serializedName: 'status',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesOptions = {
    required: false,
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesOptions',
        modelProperties: {
            maxresults: {
                required: false,
                type: {
                    name: 'Number'
                }
            },
            timeout: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.PagingGetOdataMultiplePagesOptions = {
    required: false,
    type: {
        name: 'Composite',
        className: 'PagingGetOdataMultiplePagesOptions',
        modelProperties: {
            maxresults: {
                required: false,
                type: {
                    name: 'Number'
                }
            },
            timeout: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesWithOffsetOptions = {
    required: false,
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesWithOffsetOptions',
        modelProperties: {
            maxresults: {
                required: false,
                type: {
                    name: 'Number'
                }
            },
            offset: {
                required: true,
                type: {
                    name: 'Number'
                }
            },
            timeout: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.CustomParameterGroup = {
    required: false,
    type: {
        name: 'Composite',
        className: 'CustomParameterGroup',
        modelProperties: {
            apiVersion: {
                required: true,
                type: {
                    name: 'String'
                }
            },
            tenant: {
                required: true,
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesWithOffsetNextOptions = {
    required: false,
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesWithOffsetNextOptions',
        modelProperties: {
            maxresults: {
                required: false,
                type: {
                    name: 'Number'
                }
            },
            timeout: {
                required: false,
                defaultValue: 30,
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesOptionalParams = {
    required: false,
    serializedName: 'GetMultiplePagesOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            },
            pagingGetMultiplePagesOptions: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'PagingGetMultiplePagesOptions'
                }
            }
        }
    }
};
exports.PagingGetOdataMultiplePagesOptionalParams = {
    required: false,
    serializedName: 'GetOdataMultiplePagesOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetOdataMultiplePagesOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            },
            pagingGetOdataMultiplePagesOptions: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'PagingGetOdataMultiplePagesOptions'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesWithOffsetOptionalParams = {
    required: false,
    serializedName: 'GetMultiplePagesWithOffsetOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesWithOffsetOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesNextOptionalParams = {
    required: false,
    serializedName: 'GetMultiplePagesNextOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesNextOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            },
            pagingGetMultiplePagesOptions: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'PagingGetMultiplePagesOptions'
                }
            }
        }
    }
};
exports.PagingGetOdataMultiplePagesNextOptionalParams = {
    required: false,
    serializedName: 'GetOdataMultiplePagesNextOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetOdataMultiplePagesNextOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            },
            pagingGetOdataMultiplePagesOptions: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'PagingGetOdataMultiplePagesOptions'
                }
            }
        }
    }
};
exports.PagingGetMultiplePagesWithOffsetNextOptionalParams = {
    required: false,
    serializedName: 'GetMultiplePagesWithOffsetNextOptions',
    type: {
        name: 'Composite',
        className: 'PagingGetMultiplePagesWithOffsetNextOptionalParams',
        modelProperties: {
            clientRequestId: {
                required: false,
                serializedName: 'client-request-id',
                type: {
                    name: 'String'
                }
            },
            pagingGetMultiplePagesWithOffsetNextOptions: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Composite',
                    className: 'PagingGetMultiplePagesWithOffsetNextOptions'
                }
            }
        }
    }
};
exports.ProductResult = {
    required: false,
    serializedName: 'ProductResult',
    type: {
        name: 'Composite',
        className: 'ProductResult',
        modelProperties: {
            values: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ProductElementType',
                        type: {
                            name: 'Composite',
                            className: 'Product'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
exports.OdataProductResult = {
    required: false,
    serializedName: 'OdataProductResult',
    type: {
        name: 'Composite',
        className: 'OdataProductResult',
        modelProperties: {
            values: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ProductElementType',
                        type: {
                            name: 'Composite',
                            className: 'Product'
                        }
                    }
                }
            },
            odatanextLink: {
                required: false,
                serializedName: 'odata\\.nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map