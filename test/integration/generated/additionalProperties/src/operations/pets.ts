/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Pets } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AdditionalPropertiesClient } from "../additionalPropertiesClient";
import {
  PetAPTrue,
  PetsCreateAPTrueOptionalParams,
  PetsCreateAPTrueResponse,
  CatAPTrue,
  PetsCreateCatAPTrueOptionalParams,
  PetsCreateCatAPTrueResponse,
  PetAPObject,
  PetsCreateAPObjectOptionalParams,
  PetsCreateAPObjectResponse,
  PetAPString,
  PetsCreateAPStringOptionalParams,
  PetsCreateAPStringResponse,
  PetAPInProperties,
  PetsCreateAPInPropertiesOptionalParams,
  PetsCreateAPInPropertiesResponse,
  PetAPInPropertiesWithAPString,
  PetsCreateAPInPropertiesWithAPStringOptionalParams,
  PetsCreateAPInPropertiesWithAPStringResponse
} from "../models";

/** Class containing Pets operations. */
export class PetsImpl implements Pets {
  private readonly client: AdditionalPropertiesClient;

  /**
   * Initialize a new instance of the class Pets class.
   * @param client Reference to the service client
   */
  constructor(client: AdditionalPropertiesClient) {
    this.client = client;
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createApTrue(
    createParameters: PetAPTrue,
    options?: PetsCreateAPTrueOptionalParams
  ): Promise<PetsCreateAPTrueResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateAPTrueOperationSpec
    );
  }

  /**
   * Create a CatAPTrue which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createCatApTrue(
    createParameters: CatAPTrue,
    options?: PetsCreateCatAPTrueOptionalParams
  ): Promise<PetsCreateCatAPTrueResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateCatAPTrueOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createApObject(
    createParameters: PetAPObject,
    options?: PetsCreateAPObjectOptionalParams
  ): Promise<PetsCreateAPObjectResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateAPObjectOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createApString(
    createParameters: PetAPString,
    options?: PetsCreateAPStringOptionalParams
  ): Promise<PetsCreateAPStringResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateAPStringOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createApInProperties(
    createParameters: PetAPInProperties,
    options?: PetsCreateAPInPropertiesOptionalParams
  ): Promise<PetsCreateAPInPropertiesResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateAPInPropertiesOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   * @param createParameters
   * @param options The options parameters.
   */
  createApInPropertiesWithApstring(
    createParameters: PetAPInPropertiesWithAPString,
    options?: PetsCreateAPInPropertiesWithAPStringOptionalParams
  ): Promise<PetsCreateAPInPropertiesWithAPStringResponse> {
    return this.client.sendOperationRequest(
      { createParameters, options },
      CreateAPInPropertiesWithAPStringOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const CreateAPTrueOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/true",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPTrue
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const CreateCatAPTrueOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/true-subclass",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.CatAPTrue
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters1,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const CreateAPObjectOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/type/object",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPObject
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters2,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const CreateAPStringOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/type/string",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPString
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters3,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const CreateAPInPropertiesOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/in/properties",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPInProperties
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters4,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const CreateAPInPropertiesWithAPStringOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/in/properties/with/additionalProperties/string",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPInPropertiesWithAPString
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters5,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
