/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  DatetimeGetNullResponse,
  DatetimeGetInvalidResponse,
  DatetimeGetOverflowResponse,
  DatetimeGetUnderflowResponse,
  DatetimeGetUtcLowercaseMaxDateTimeResponse,
  DatetimeGetUtcUppercaseMaxDateTimeResponse,
  DatetimeGetUtcUppercaseMaxDateTime7DigitsResponse,
  DatetimeGetLocalPositiveOffsetLowercaseMaxDateTimeResponse,
  DatetimeGetLocalPositiveOffsetUppercaseMaxDateTimeResponse,
  DatetimeGetLocalNegativeOffsetUppercaseMaxDateTimeResponse,
  DatetimeGetLocalNegativeOffsetLowercaseMaxDateTimeResponse,
  DatetimeGetUtcMinDateTimeResponse,
  DatetimeGetLocalPositiveOffsetMinDateTimeResponse,
  DatetimeGetLocalNegativeOffsetMinDateTimeResponse,
  DatetimeGetLocalNoOffsetMinDateTimeResponse
} from "../models";

/** Interface representing a Datetime. */
export interface Datetime {
  /**
   * Get null datetime value
   * @param options The options parameters.
   */
  getNull(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetNullResponse>;
  /**
   * Get invalid datetime value
   * @param options The options parameters.
   */
  getInvalid(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetInvalidResponse>;
  /**
   * Get overflow datetime value
   * @param options The options parameters.
   */
  getOverflow(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetOverflowResponse>;
  /**
   * Get underflow datetime value
   * @param options The options parameters.
   */
  getUnderflow(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetUnderflowResponse>;
  /**
   * Put max datetime value 9999-12-31T23:59:59.999Z
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putUtcMaxDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * This is against the recommendation that asks for 3 digits, but allow to test what happens in that
   * scenario
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putUtcMaxDateTime7Digits(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get max datetime value 9999-12-31t23:59:59.999z
   * @param options The options parameters.
   */
  getUtcLowercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetUtcLowercaseMaxDateTimeResponse>;
  /**
   * Get max datetime value 9999-12-31T23:59:59.999Z
   * @param options The options parameters.
   */
  getUtcUppercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetUtcUppercaseMaxDateTimeResponse>;
  /**
   * This is against the recommendation that asks for 3 digits, but allow to test what happens in that
   * scenario
   * @param options The options parameters.
   */
  getUtcUppercaseMaxDateTime7Digits(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetUtcUppercaseMaxDateTime7DigitsResponse>;
  /**
   * Put max datetime value with positive numoffset 9999-12-31t23:59:59.999+14:00
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putLocalPositiveOffsetMaxDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get max datetime value with positive num offset 9999-12-31t23:59:59.999+14:00
   * @param options The options parameters.
   */
  getLocalPositiveOffsetLowercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalPositiveOffsetLowercaseMaxDateTimeResponse>;
  /**
   * Get max datetime value with positive num offset 9999-12-31T23:59:59.999+14:00
   * @param options The options parameters.
   */
  getLocalPositiveOffsetUppercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalPositiveOffsetUppercaseMaxDateTimeResponse>;
  /**
   * Put max datetime value with positive numoffset 9999-12-31t23:59:59.999-14:00
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putLocalNegativeOffsetMaxDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get max datetime value with positive num offset 9999-12-31T23:59:59.999-14:00
   * @param options The options parameters.
   */
  getLocalNegativeOffsetUppercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalNegativeOffsetUppercaseMaxDateTimeResponse>;
  /**
   * Get max datetime value with positive num offset 9999-12-31t23:59:59.999-14:00
   * @param options The options parameters.
   */
  getLocalNegativeOffsetLowercaseMaxDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalNegativeOffsetLowercaseMaxDateTimeResponse>;
  /**
   * Put min datetime value 0001-01-01T00:00:00Z
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putUtcMinDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get min datetime value 0001-01-01T00:00:00Z
   * @param options The options parameters.
   */
  getUtcMinDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetUtcMinDateTimeResponse>;
  /**
   * Put min datetime value 0001-01-01T00:00:00+14:00
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putLocalPositiveOffsetMinDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get min datetime value 0001-01-01T00:00:00+14:00
   * @param options The options parameters.
   */
  getLocalPositiveOffsetMinDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalPositiveOffsetMinDateTimeResponse>;
  /**
   * Put min datetime value 0001-01-01T00:00:00-14:00
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putLocalNegativeOffsetMinDateTime(
    datetimeBody: Date,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Get min datetime value 0001-01-01T00:00:00-14:00
   * @param options The options parameters.
   */
  getLocalNegativeOffsetMinDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalNegativeOffsetMinDateTimeResponse>;
  /**
   * Get min datetime value 0001-01-01T00:00:00
   * @param options The options parameters.
   */
  getLocalNoOffsetMinDateTime(
    options?: coreHttp.OperationOptions
  ): Promise<DatetimeGetLocalNoOffsetMinDateTimeResponse>;
}
