/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  HttpRedirectsHead300Response,
  HttpRedirectsGet300Response,
  HttpRedirectsHead301Response,
  HttpRedirectsGet301Response,
  HttpRedirectsPut301Response,
  HttpRedirectsHead302Response,
  HttpRedirectsGet302Response,
  HttpRedirectsPatch302Response,
  HttpRedirectsPost303Response,
  HttpRedirectsHead307Response,
  HttpRedirectsGet307Response,
  HttpRedirectsOptions307Response,
  HttpRedirectsPut307Response,
  HttpRedirectsPatch307Response,
  HttpRedirectsPost307Response,
  HttpRedirectsDelete307Response
} from "../models";

/** Interface representing a HttpRedirects. */
export interface HttpRedirects {
  /**
   * Return 300 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  head300(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsHead300Response>;
  /**
   * Return 300 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  get300(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsGet300Response>;
  /**
   * Return 301 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  head301(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsHead301Response>;
  /**
   * Return 301 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  get301(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsGet301Response>;
  /**
   * Put true Boolean value in request returns 301.  This request should not be automatically redirected,
   * but should return the received 301 to the caller for evaluation
   * @param options The options parameters.
   */
  put301(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPut301Response>;
  /**
   * Return 302 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  head302(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsHead302Response>;
  /**
   * Return 302 status code and redirect to /http/success/200
   * @param options The options parameters.
   */
  get302(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsGet302Response>;
  /**
   * Patch true Boolean value in request returns 302.  This request should not be automatically
   * redirected, but should return the received 302 to the caller for evaluation
   * @param options The options parameters.
   */
  patch302(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPatch302Response>;
  /**
   * Post true Boolean value in request returns 303.  This request should be automatically redirected
   * usign a get, ultimately returning a 200 status code
   * @param options The options parameters.
   */
  post303(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPost303Response>;
  /**
   * Redirect with 307, resulting in a 200 success
   * @param options The options parameters.
   */
  head307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsHead307Response>;
  /**
   * Redirect get with 307, resulting in a 200 success
   * @param options The options parameters.
   */
  get307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsGet307Response>;
  /**
   * options redirected with 307, resulting in a 200 after redirect
   * @param options The options parameters.
   */
  options307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsOptions307Response>;
  /**
   * Put redirected with 307, resulting in a 200 after redirect
   * @param options The options parameters.
   */
  put307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPut307Response>;
  /**
   * Patch redirected with 307, resulting in a 200 after redirect
   * @param options The options parameters.
   */
  patch307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPatch307Response>;
  /**
   * Post redirected with 307, resulting in a 200 after redirect
   * @param options The options parameters.
   */
  post307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsPost307Response>;
  /**
   * Delete redirected with 307, resulting in a 200 after redirect
   * @param options The options parameters.
   */
  delete307(
    options?: coreHttp.OperationOptions
  ): Promise<HttpRedirectsDelete307Response>;
}
