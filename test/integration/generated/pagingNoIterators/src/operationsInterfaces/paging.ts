/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  PagingGetNoItemNamePagesOptionalParams,
  PagingGetNoItemNamePagesResponse,
  PagingGetNullNextLinkNamePagesOptionalParams,
  PagingGetNullNextLinkNamePagesResponse,
  PagingGetSinglePagesOptionalParams,
  PagingGetSinglePagesResponse,
  PagingFirstResponseEmptyOptionalParams,
  PagingFirstResponseEmptyResponse,
  PagingGetMultiplePagesOptionalParams,
  PagingGetMultiplePagesResponse,
  PagingGetWithQueryParamsOptionalParams,
  PagingGetWithQueryParamsResponse,
  PagingNextOperationWithQueryParamsOptionalParams,
  PagingNextOperationWithQueryParamsResponse,
  PagingGetOdataMultiplePagesOptionalParams,
  PagingGetOdataMultiplePagesResponse,
  PagingGetMultiplePagesWithOffsetOptions,
  PagingGetMultiplePagesWithOffsetOptionalParams,
  PagingGetMultiplePagesWithOffsetResponse,
  PagingGetMultiplePagesRetryFirstOptionalParams,
  PagingGetMultiplePagesRetryFirstResponse,
  PagingGetMultiplePagesRetrySecondOptionalParams,
  PagingGetMultiplePagesRetrySecondResponse,
  PagingGetSinglePagesFailureOptionalParams,
  PagingGetSinglePagesFailureResponse,
  PagingGetMultiplePagesFailureOptionalParams,
  PagingGetMultiplePagesFailureResponse,
  PagingGetMultiplePagesFailureUriOptionalParams,
  PagingGetMultiplePagesFailureUriResponse,
  PagingGetMultiplePagesFragmentNextLinkOptionalParams,
  PagingGetMultiplePagesFragmentNextLinkResponse,
  CustomParameterGroup,
  PagingGetMultiplePagesFragmentWithGroupingNextLinkOptionalParams,
  PagingGetMultiplePagesFragmentWithGroupingNextLinkResponse,
  PagingGetMultiplePagesLROOptionalParams,
  PagingGetMultiplePagesLROResponse,
  PagingNextFragmentOptionalParams,
  PagingNextFragmentResponse,
  PagingNextFragmentWithGroupingOptionalParams,
  PagingNextFragmentWithGroupingResponse,
  PagingGetPagingModelWithItemNameWithXMSClientNameOptionalParams,
  PagingGetPagingModelWithItemNameWithXMSClientNameResponse,
  PagingGetNoItemNamePagesNextOptionalParams,
  PagingGetNoItemNamePagesNextResponse,
  PagingGetSinglePagesNextOptionalParams,
  PagingGetSinglePagesNextResponse,
  PagingFirstResponseEmptyNextOptionalParams,
  PagingFirstResponseEmptyNextResponse,
  PagingGetMultiplePagesNextOptionalParams,
  PagingGetMultiplePagesNextResponse,
  PagingGetOdataMultiplePagesNextOptionalParams,
  PagingGetOdataMultiplePagesNextResponse,
  PagingGetMultiplePagesWithOffsetNextOptionalParams,
  PagingGetMultiplePagesWithOffsetNextResponse,
  PagingGetMultiplePagesRetryFirstNextOptionalParams,
  PagingGetMultiplePagesRetryFirstNextResponse,
  PagingGetMultiplePagesRetrySecondNextOptionalParams,
  PagingGetMultiplePagesRetrySecondNextResponse,
  PagingGetSinglePagesFailureNextOptionalParams,
  PagingGetSinglePagesFailureNextResponse,
  PagingGetMultiplePagesFailureNextOptionalParams,
  PagingGetMultiplePagesFailureNextResponse,
  PagingGetMultiplePagesFailureUriNextOptionalParams,
  PagingGetMultiplePagesFailureUriNextResponse,
  PagingGetMultiplePagesLRONextOptionalParams,
  PagingGetMultiplePagesLRONextResponse,
  PagingGetPagingModelWithItemNameWithXMSClientNameNextOptionalParams,
  PagingGetPagingModelWithItemNameWithXMSClientNameNextResponse
} from "../models";

/** Interface representing a Paging. */
export interface Paging {
  /**
   * A paging operation that must return result of the default 'value' node.
   * @param options The options parameters.
   */
  getNoItemNamePages(
    options?: PagingGetNoItemNamePagesOptionalParams
  ): Promise<PagingGetNoItemNamePagesResponse>;
  /**
   * A paging operation that must ignore any kind of nextLink, and stop after page 1.
   * @param options The options parameters.
   */
  getNullNextLinkNamePages(
    options?: PagingGetNullNextLinkNamePagesOptionalParams
  ): Promise<PagingGetNullNextLinkNamePagesResponse>;
  /**
   * A paging operation that finishes on the first call without a nextlink
   * @param options The options parameters.
   */
  getSinglePages(
    options?: PagingGetSinglePagesOptionalParams
  ): Promise<PagingGetSinglePagesResponse>;
  /**
   * A paging operation whose first response's items list is empty, but still returns a next link. Second
   * (and final) call, will give you an items list of 1.
   * @param options The options parameters.
   */
  firstResponseEmpty(
    options?: PagingFirstResponseEmptyOptionalParams
  ): Promise<PagingFirstResponseEmptyResponse>;
  /**
   * A paging operation that includes a nextLink that has 10 pages
   * @param options The options parameters.
   */
  getMultiplePages(
    options?: PagingGetMultiplePagesOptionalParams
  ): Promise<PagingGetMultiplePagesResponse>;
  /**
   * A paging operation that includes a next operation. It has a different query parameter from it's next
   * operation nextOperationWithQueryParams. Returns a ProductResult
   * @param requiredQueryParameter A required integer query parameter. Put in value '100' to pass test.
   * @param options The options parameters.
   */
  getWithQueryParams(
    requiredQueryParameter: number,
    options?: PagingGetWithQueryParamsOptionalParams
  ): Promise<PagingGetWithQueryParamsResponse>;
  /**
   * Next operation for getWithQueryParams. Pass in next=True to pass test. Returns a ProductResult
   * @param options The options parameters.
   */
  nextOperationWithQueryParams(
    options?: PagingNextOperationWithQueryParamsOptionalParams
  ): Promise<PagingNextOperationWithQueryParamsResponse>;
  /**
   * A paging operation that includes a nextLink in odata format that has 10 pages
   * @param options The options parameters.
   */
  getOdataMultiplePages(
    options?: PagingGetOdataMultiplePagesOptionalParams
  ): Promise<PagingGetOdataMultiplePagesResponse>;
  /**
   * A paging operation that includes a nextLink that has 10 pages
   * @param pagingGetMultiplePagesWithOffsetOptions Parameter group
   * @param options The options parameters.
   */
  getMultiplePagesWithOffset(
    pagingGetMultiplePagesWithOffsetOptions: PagingGetMultiplePagesWithOffsetOptions,
    options?: PagingGetMultiplePagesWithOffsetOptionalParams
  ): Promise<PagingGetMultiplePagesWithOffsetResponse>;
  /**
   * A paging operation that fails on the first call with 500 and then retries and then get a response
   * including a nextLink that has 10 pages
   * @param options The options parameters.
   */
  getMultiplePagesRetryFirst(
    options?: PagingGetMultiplePagesRetryFirstOptionalParams
  ): Promise<PagingGetMultiplePagesRetryFirstResponse>;
  /**
   * A paging operation that includes a nextLink that has 10 pages, of which the 2nd call fails first
   * with 500. The client should retry and finish all 10 pages eventually.
   * @param options The options parameters.
   */
  getMultiplePagesRetrySecond(
    options?: PagingGetMultiplePagesRetrySecondOptionalParams
  ): Promise<PagingGetMultiplePagesRetrySecondResponse>;
  /**
   * A paging operation that receives a 400 on the first call
   * @param options The options parameters.
   */
  getSinglePagesFailure(
    options?: PagingGetSinglePagesFailureOptionalParams
  ): Promise<PagingGetSinglePagesFailureResponse>;
  /**
   * A paging operation that receives a 400 on the second call
   * @param options The options parameters.
   */
  getMultiplePagesFailure(
    options?: PagingGetMultiplePagesFailureOptionalParams
  ): Promise<PagingGetMultiplePagesFailureResponse>;
  /**
   * A paging operation that receives an invalid nextLink
   * @param options The options parameters.
   */
  getMultiplePagesFailureUri(
    options?: PagingGetMultiplePagesFailureUriOptionalParams
  ): Promise<PagingGetMultiplePagesFailureUriResponse>;
  /**
   * A paging operation that doesn't return a full URL, just a fragment
   * @param apiVersion Sets the api version to use.
   * @param tenant Sets the tenant to use.
   * @param options The options parameters.
   */
  getMultiplePagesFragmentNextLink(
    apiVersion: string,
    tenant: string,
    options?: PagingGetMultiplePagesFragmentNextLinkOptionalParams
  ): Promise<PagingGetMultiplePagesFragmentNextLinkResponse>;
  /**
   * A paging operation that doesn't return a full URL, just a fragment with parameters grouped
   * @param customParameterGroup Parameter group
   * @param options The options parameters.
   */
  getMultiplePagesFragmentWithGroupingNextLink(
    customParameterGroup: CustomParameterGroup,
    options?: PagingGetMultiplePagesFragmentWithGroupingNextLinkOptionalParams
  ): Promise<PagingGetMultiplePagesFragmentWithGroupingNextLinkResponse>;
  /**
   * A long-running paging operation that includes a nextLink that has 10 pages
   * @param options The options parameters.
   */
  getMultiplePagesLRO(
    options?: PagingGetMultiplePagesLROOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PagingGetMultiplePagesLROResponse>,
      PagingGetMultiplePagesLROResponse
    >
  >;
  /**
   * A paging operation that doesn't return a full URL, just a fragment
   * @param apiVersion Sets the api version to use.
   * @param tenant Sets the tenant to use.
   * @param nextLink Next link for list operation.
   * @param options The options parameters.
   */
  nextFragment(
    apiVersion: string,
    tenant: string,
    nextLink: string,
    options?: PagingNextFragmentOptionalParams
  ): Promise<PagingNextFragmentResponse>;
  /**
   * A paging operation that doesn't return a full URL, just a fragment
   * @param nextLink Next link for list operation.
   * @param customParameterGroup Parameter group
   * @param options The options parameters.
   */
  nextFragmentWithGrouping(
    nextLink: string,
    customParameterGroup: CustomParameterGroup,
    options?: PagingNextFragmentWithGroupingOptionalParams
  ): Promise<PagingNextFragmentWithGroupingResponse>;
  /**
   * A paging operation that returns a paging model whose item name is is overriden by x-ms-client-name
   * 'indexes'.
   * @param options The options parameters.
   */
  getPagingModelWithItemNameWithXMSClientName(
    options?: PagingGetPagingModelWithItemNameWithXMSClientNameOptionalParams
  ): Promise<PagingGetPagingModelWithItemNameWithXMSClientNameResponse>;
  /**
   * getNoItemNamePagesNext
   * @param nextLink The nextLink from the previous successful call to the getNoItemNamePages method.
   * @param options The options parameters.
   */
  getNoItemNamePagesNext(
    nextLink: string,
    options?: PagingGetNoItemNamePagesNextOptionalParams
  ): Promise<PagingGetNoItemNamePagesNextResponse>;
  /**
   * getSinglePagesNext
   * @param nextLink The nextLink from the previous successful call to the getSinglePages method.
   * @param options The options parameters.
   */
  getSinglePagesNext(
    nextLink: string,
    options?: PagingGetSinglePagesNextOptionalParams
  ): Promise<PagingGetSinglePagesNextResponse>;
  /**
   * firstResponseEmptyNext
   * @param nextLink The nextLink from the previous successful call to the firstResponseEmpty method.
   * @param options The options parameters.
   */
  firstResponseEmptyNext(
    nextLink: string,
    options?: PagingFirstResponseEmptyNextOptionalParams
  ): Promise<PagingFirstResponseEmptyNextResponse>;
  /**
   * getMultiplePagesNext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePages method.
   * @param options The options parameters.
   */
  getMultiplePagesNext(
    nextLink: string,
    options?: PagingGetMultiplePagesNextOptionalParams
  ): Promise<PagingGetMultiplePagesNextResponse>;
  /**
   * getOdataMultiplePagesNext
   * @param nextLink The nextLink from the previous successful call to the getOdataMultiplePages method.
   * @param options The options parameters.
   */
  getOdataMultiplePagesNext(
    nextLink: string,
    options?: PagingGetOdataMultiplePagesNextOptionalParams
  ): Promise<PagingGetOdataMultiplePagesNextResponse>;
  /**
   * getMultiplePagesWithOffsetNext
   * @param pagingGetMultiplePagesWithOffsetOptions Parameter group
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesWithOffset
   *                 method.
   * @param options The options parameters.
   */
  getMultiplePagesWithOffsetNext(
    pagingGetMultiplePagesWithOffsetOptions: PagingGetMultiplePagesWithOffsetOptions,
    nextLink: string,
    options?: PagingGetMultiplePagesWithOffsetNextOptionalParams
  ): Promise<PagingGetMultiplePagesWithOffsetNextResponse>;
  /**
   * getMultiplePagesRetryFirstNext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesRetryFirst
   *                 method.
   * @param options The options parameters.
   */
  getMultiplePagesRetryFirstNext(
    nextLink: string,
    options?: PagingGetMultiplePagesRetryFirstNextOptionalParams
  ): Promise<PagingGetMultiplePagesRetryFirstNextResponse>;
  /**
   * getMultiplePagesRetrySecondNext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesRetrySecond
   *                 method.
   * @param options The options parameters.
   */
  getMultiplePagesRetrySecondNext(
    nextLink: string,
    options?: PagingGetMultiplePagesRetrySecondNextOptionalParams
  ): Promise<PagingGetMultiplePagesRetrySecondNextResponse>;
  /**
   * getSinglePagesFailureNext
   * @param nextLink The nextLink from the previous successful call to the getSinglePagesFailure method.
   * @param options The options parameters.
   */
  getSinglePagesFailureNext(
    nextLink: string,
    options?: PagingGetSinglePagesFailureNextOptionalParams
  ): Promise<PagingGetSinglePagesFailureNextResponse>;
  /**
   * getMultiplePagesFailureNext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesFailure
   *                 method.
   * @param options The options parameters.
   */
  getMultiplePagesFailureNext(
    nextLink: string,
    options?: PagingGetMultiplePagesFailureNextOptionalParams
  ): Promise<PagingGetMultiplePagesFailureNextResponse>;
  /**
   * getMultiplePagesFailureUriNext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesFailureUri
   *                 method.
   * @param options The options parameters.
   */
  getMultiplePagesFailureUriNext(
    nextLink: string,
    options?: PagingGetMultiplePagesFailureUriNextOptionalParams
  ): Promise<PagingGetMultiplePagesFailureUriNextResponse>;
  /**
   * getMultiplePagesLRONext
   * @param nextLink The nextLink from the previous successful call to the getMultiplePagesLRO method.
   * @param options The options parameters.
   */
  getMultiplePagesLRONext(
    nextLink: string,
    options?: PagingGetMultiplePagesLRONextOptionalParams
  ): Promise<PagingGetMultiplePagesLRONextResponse>;
  /**
   * getPagingModelWithItemNameWithXMSClientNameNext
   * @param nextLink The nextLink from the previous successful call to the
   *                 getPagingModelWithItemNameWithXMSClientName method.
   * @param options The options parameters.
   */
  getPagingModelWithItemNameWithXMSClientNameNext(
    nextLink: string,
    options?: PagingGetPagingModelWithItemNameWithXMSClientNameNextOptionalParams
  ): Promise<PagingGetPagingModelWithItemNameWithXMSClientNameNextResponse>;
}
