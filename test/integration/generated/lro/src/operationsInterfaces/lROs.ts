/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  LrOSPut200SucceededOptionalParams,
  LrOSPut200SucceededResponse,
  LrOSPatch200SucceededIgnoreHeadersOptionalParams,
  LrOSPatch200SucceededIgnoreHeadersResponse,
  LrOSPut201SucceededOptionalParams,
  LrOSPut201SucceededResponse,
  LrOSPost202ListOptionalParams,
  LrOSPost202ListResponse,
  LrOSPut200SucceededNoStateOptionalParams,
  LrOSPut200SucceededNoStateResponse,
  LrOSPut202Retry200OptionalParams,
  LrOSPut202Retry200Response,
  LrOSPut201CreatingSucceeded200OptionalParams,
  LrOSPut201CreatingSucceeded200Response,
  LrOSPut200UpdatingSucceeded204OptionalParams,
  LrOSPut200UpdatingSucceeded204Response,
  LrOSPut201CreatingFailed200OptionalParams,
  LrOSPut201CreatingFailed200Response,
  LrOSPut200Acceptedcanceled200OptionalParams,
  LrOSPut200Acceptedcanceled200Response,
  LrOSPutNoHeaderInRetryOptionalParams,
  LrOSPutNoHeaderInRetryResponse,
  LrOSPutAsyncRetrySucceededOptionalParams,
  LrOSPutAsyncRetrySucceededResponse,
  LrOSPutAsyncNoRetrySucceededOptionalParams,
  LrOSPutAsyncNoRetrySucceededResponse,
  LrOSPutAsyncRetryFailedOptionalParams,
  LrOSPutAsyncRetryFailedResponse,
  LrOSPutAsyncNoRetrycanceledOptionalParams,
  LrOSPutAsyncNoRetrycanceledResponse,
  LrOSPutAsyncNoHeaderInRetryOptionalParams,
  LrOSPutAsyncNoHeaderInRetryResponse,
  LrOSPutNonResourceOptionalParams,
  LrOSPutNonResourceResponse,
  LrOSPutAsyncNonResourceOptionalParams,
  LrOSPutAsyncNonResourceResponse,
  LrOSPutSubResourceOptionalParams,
  LrOSPutSubResourceResponse,
  LrOSPutAsyncSubResourceOptionalParams,
  LrOSPutAsyncSubResourceResponse,
  LrOSDeleteProvisioning202Accepted200SucceededOptionalParams,
  LrOSDeleteProvisioning202Accepted200SucceededResponse,
  LrOSDeleteProvisioning202DeletingFailed200OptionalParams,
  LrOSDeleteProvisioning202DeletingFailed200Response,
  LrOSDeleteProvisioning202Deletingcanceled200OptionalParams,
  LrOSDeleteProvisioning202Deletingcanceled200Response,
  LrOSDelete204SucceededOptionalParams,
  LrOSDelete202Retry200OptionalParams,
  LrOSDelete202Retry200Response,
  LrOSDelete202NoRetry204OptionalParams,
  LrOSDelete202NoRetry204Response,
  LrOSDeleteNoHeaderInRetryOptionalParams,
  LrOSDeleteNoHeaderInRetryResponse,
  LrOSDeleteAsyncNoHeaderInRetryOptionalParams,
  LrOSDeleteAsyncNoHeaderInRetryResponse,
  LrOSDeleteAsyncRetrySucceededOptionalParams,
  LrOSDeleteAsyncRetrySucceededResponse,
  LrOSDeleteAsyncNoRetrySucceededOptionalParams,
  LrOSDeleteAsyncNoRetrySucceededResponse,
  LrOSDeleteAsyncRetryFailedOptionalParams,
  LrOSDeleteAsyncRetryFailedResponse,
  LrOSDeleteAsyncRetrycanceledOptionalParams,
  LrOSDeleteAsyncRetrycanceledResponse,
  LrOSPost200WithPayloadOptionalParams,
  LrOSPost200WithPayloadResponse,
  LrOSPost202Retry200OptionalParams,
  LrOSPost202Retry200Response,
  LrOSPost202NoRetry204OptionalParams,
  LrOSPost202NoRetry204Response,
  LrOSPostDoubleHeadersFinalLocationGetOptionalParams,
  LrOSPostDoubleHeadersFinalLocationGetResponse,
  LrOSPostDoubleHeadersFinalAzureHeaderGetOptionalParams,
  LrOSPostDoubleHeadersFinalAzureHeaderGetResponse,
  LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams,
  LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultResponse,
  LrOSPostAsyncRetrySucceededOptionalParams,
  LrOSPostAsyncRetrySucceededResponse,
  LrOSPostAsyncNoRetrySucceededOptionalParams,
  LrOSPostAsyncNoRetrySucceededResponse,
  LrOSPostAsyncRetryFailedOptionalParams,
  LrOSPostAsyncRetryFailedResponse,
  LrOSPostAsyncRetrycanceledOptionalParams,
  LrOSPostAsyncRetrycanceledResponse
} from "../models";

/** Interface representing a LrOS. */
export interface LrOS {
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200Succeeded(
    options?: LrOSPut200SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut200SucceededResponse>,
      LrOSPut200SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededAndWait(
    options?: LrOSPut200SucceededOptionalParams
  ): Promise<LrOSPut200SucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request with location header. We
   * should not have any subsequent calls after receiving this first response.
   * @param options The options parameters.
   */
  beginPatch200SucceededIgnoreHeaders(
    options?: LrOSPatch200SucceededIgnoreHeadersOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPatch200SucceededIgnoreHeadersResponse>,
      LrOSPatch200SucceededIgnoreHeadersResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request with location header. We
   * should not have any subsequent calls after receiving this first response.
   * @param options The options parameters.
   */
  beginPatch200SucceededIgnoreHeadersAndWait(
    options?: LrOSPatch200SucceededIgnoreHeadersOptionalParams
  ): Promise<LrOSPatch200SucceededIgnoreHeadersResponse>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut201Succeeded(
    options?: LrOSPut201SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut201SucceededResponse>,
      LrOSPut201SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut201SucceededAndWait(
    options?: LrOSPut201SucceededOptionalParams
  ): Promise<LrOSPut201SucceededResponse>;
  /**
   * Long running put request, service returns a 202 with empty body to first request, returns a 200 with
   * body [{ 'id': '100', 'name': 'foo' }].
   * @param options The options parameters.
   */
  beginPost202List(
    options?: LrOSPost202ListOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPost202ListResponse>,
      LrOSPost202ListResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 with empty body to first request, returns a 200 with
   * body [{ 'id': '100', 'name': 'foo' }].
   * @param options The options parameters.
   */
  beginPost202ListAndWait(
    options?: LrOSPost202ListOptionalParams
  ): Promise<LrOSPost202ListResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that does not
   * contain ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededNoState(
    options?: LrOSPut200SucceededNoStateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut200SucceededNoStateResponse>,
      LrOSPut200SucceededNoStateResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that does not
   * contain ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededNoStateAndWait(
    options?: LrOSPut200SucceededNoStateOptionalParams
  ): Promise<LrOSPut200SucceededNoStateResponse>;
  /**
   * Long running put request, service returns a 202 to the initial request, with a location header that
   * points to a polling URL that returns a 200 and an entity that doesn't contains ProvisioningState
   * @param options The options parameters.
   */
  beginPut202Retry200(
    options?: LrOSPut202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut202Retry200Response>,
      LrOSPut202Retry200Response
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request, with a location header that
   * points to a polling URL that returns a 200 and an entity that doesn't contains ProvisioningState
   * @param options The options parameters.
   */
  beginPut202Retry200AndWait(
    options?: LrOSPut202Retry200OptionalParams
  ): Promise<LrOSPut202Retry200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200(
    options?: LrOSPut201CreatingSucceeded200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut201CreatingSucceeded200Response>,
      LrOSPut201CreatingSucceeded200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200AndWait(
    options?: LrOSPut201CreatingSucceeded200OptionalParams
  ): Promise<LrOSPut201CreatingSucceeded200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut200UpdatingSucceeded204(
    options?: LrOSPut200UpdatingSucceeded204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut200UpdatingSucceeded204Response>,
      LrOSPut200UpdatingSucceeded204Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut200UpdatingSucceeded204AndWait(
    options?: LrOSPut200UpdatingSucceeded204OptionalParams
  ): Promise<LrOSPut200UpdatingSucceeded204Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginPut201CreatingFailed200(
    options?: LrOSPut201CreatingFailed200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut201CreatingFailed200Response>,
      LrOSPut201CreatingFailed200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginPut201CreatingFailed200AndWait(
    options?: LrOSPut201CreatingFailed200OptionalParams
  ): Promise<LrOSPut201CreatingFailed200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginPut200Acceptedcanceled200(
    options?: LrOSPut200Acceptedcanceled200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPut200Acceptedcanceled200Response>,
      LrOSPut200Acceptedcanceled200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginPut200Acceptedcanceled200AndWait(
    options?: LrOSPut200Acceptedcanceled200OptionalParams
  ): Promise<LrOSPut200Acceptedcanceled200Response>;
  /**
   * Long running put request, service returns a 202 to the initial request with location header.
   * Subsequent calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginPutNoHeaderInRetry(
    options?: LrOSPutNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutNoHeaderInRetryResponse>,
      LrOSPutNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with location header.
   * Subsequent calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginPutNoHeaderInRetryAndWait(
    options?: LrOSPutNoHeaderInRetryOptionalParams
  ): Promise<LrOSPutNoHeaderInRetryResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceeded(
    options?: LrOSPutAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncRetrySucceededResponse>,
      LrOSPutAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceededAndWait(
    options?: LrOSPutAsyncRetrySucceededOptionalParams
  ): Promise<LrOSPutAsyncRetrySucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrySucceeded(
    options?: LrOSPutAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncNoRetrySucceededResponse>,
      LrOSPutAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrySucceededAndWait(
    options?: LrOSPutAsyncNoRetrySucceededOptionalParams
  ): Promise<LrOSPutAsyncNoRetrySucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetryFailed(
    options?: LrOSPutAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncRetryFailedResponse>,
      LrOSPutAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetryFailedAndWait(
    options?: LrOSPutAsyncRetryFailedOptionalParams
  ): Promise<LrOSPutAsyncRetryFailedResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrycanceled(
    options?: LrOSPutAsyncNoRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncNoRetrycanceledResponse>,
      LrOSPutAsyncNoRetrycanceledResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrycanceledAndWait(
    options?: LrOSPutAsyncNoRetrycanceledOptionalParams
  ): Promise<LrOSPutAsyncNoRetrycanceledResponse>;
  /**
   * Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation
   * header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginPutAsyncNoHeaderInRetry(
    options?: LrOSPutAsyncNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncNoHeaderInRetryResponse>,
      LrOSPutAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation
   * header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginPutAsyncNoHeaderInRetryAndWait(
    options?: LrOSPutAsyncNoHeaderInRetryOptionalParams
  ): Promise<LrOSPutAsyncNoHeaderInRetryResponse>;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutNonResource(
    options?: LrOSPutNonResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutNonResourceResponse>,
      LrOSPutNonResourceResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutNonResourceAndWait(
    options?: LrOSPutNonResourceOptionalParams
  ): Promise<LrOSPutNonResourceResponse>;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutAsyncNonResource(
    options?: LrOSPutAsyncNonResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncNonResourceResponse>,
      LrOSPutAsyncNonResourceResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutAsyncNonResourceAndWait(
    options?: LrOSPutAsyncNonResourceOptionalParams
  ): Promise<LrOSPutAsyncNonResourceResponse>;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutSubResource(
    options?: LrOSPutSubResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutSubResourceResponse>,
      LrOSPutSubResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutSubResourceAndWait(
    options?: LrOSPutSubResourceOptionalParams
  ): Promise<LrOSPutSubResourceResponse>;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutAsyncSubResource(
    options?: LrOSPutAsyncSubResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPutAsyncSubResourceResponse>,
      LrOSPutAsyncSubResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutAsyncSubResourceAndWait(
    options?: LrOSPutAsyncSubResourceOptionalParams
  ): Promise<LrOSPutAsyncSubResourceResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200Succeeded(
    options?: LrOSDeleteProvisioning202Accepted200SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteProvisioning202Accepted200SucceededResponse>,
      LrOSDeleteProvisioning202Accepted200SucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200SucceededAndWait(
    options?: LrOSDeleteProvisioning202Accepted200SucceededOptionalParams
  ): Promise<LrOSDeleteProvisioning202Accepted200SucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202DeletingFailed200(
    options?: LrOSDeleteProvisioning202DeletingFailed200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteProvisioning202DeletingFailed200Response>,
      LrOSDeleteProvisioning202DeletingFailed200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202DeletingFailed200AndWait(
    options?: LrOSDeleteProvisioning202DeletingFailed200OptionalParams
  ): Promise<LrOSDeleteProvisioning202DeletingFailed200Response>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Deletingcanceled200(
    options?: LrOSDeleteProvisioning202Deletingcanceled200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteProvisioning202Deletingcanceled200Response>,
      LrOSDeleteProvisioning202Deletingcanceled200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Deletingcanceled200AndWait(
    options?: LrOSDeleteProvisioning202Deletingcanceled200OptionalParams
  ): Promise<LrOSDeleteProvisioning202Deletingcanceled200Response>;
  /**
   * Long running delete succeeds and returns right away
   * @param options The options parameters.
   */
  beginDelete204Succeeded(
    options?: LrOSDelete204SucceededOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Long running delete succeeds and returns right away
   * @param options The options parameters.
   */
  beginDelete204SucceededAndWait(
    options?: LrOSDelete204SucceededOptionalParams
  ): Promise<void>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200(
    options?: LrOSDelete202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDelete202Retry200Response>,
      LrOSDelete202Retry200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200AndWait(
    options?: LrOSDelete202Retry200OptionalParams
  ): Promise<LrOSDelete202Retry200Response>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202NoRetry204(
    options?: LrOSDelete202NoRetry204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDelete202NoRetry204Response>,
      LrOSDelete202NoRetry204Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202NoRetry204AndWait(
    options?: LrOSDelete202NoRetry204OptionalParams
  ): Promise<LrOSDelete202NoRetry204Response>;
  /**
   * Long running delete request, service returns a location header in the initial request. Subsequent
   * calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginDeleteNoHeaderInRetry(
    options?: LrOSDeleteNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteNoHeaderInRetryResponse>,
      LrOSDeleteNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns a location header in the initial request. Subsequent
   * calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginDeleteNoHeaderInRetryAndWait(
    options?: LrOSDeleteNoHeaderInRetryOptionalParams
  ): Promise<LrOSDeleteNoHeaderInRetryResponse>;
  /**
   * Long running delete request, service returns an Azure-AsyncOperation header in the initial request.
   * Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginDeleteAsyncNoHeaderInRetry(
    options?: LrOSDeleteAsyncNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteAsyncNoHeaderInRetryResponse>,
      LrOSDeleteAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns an Azure-AsyncOperation header in the initial request.
   * Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginDeleteAsyncNoHeaderInRetryAndWait(
    options?: LrOSDeleteAsyncNoHeaderInRetryOptionalParams
  ): Promise<LrOSDeleteAsyncNoHeaderInRetryResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrySucceeded(
    options?: LrOSDeleteAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteAsyncRetrySucceededResponse>,
      LrOSDeleteAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrySucceededAndWait(
    options?: LrOSDeleteAsyncRetrySucceededOptionalParams
  ): Promise<LrOSDeleteAsyncRetrySucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncNoRetrySucceeded(
    options?: LrOSDeleteAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteAsyncNoRetrySucceededResponse>,
      LrOSDeleteAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncNoRetrySucceededAndWait(
    options?: LrOSDeleteAsyncNoRetrySucceededOptionalParams
  ): Promise<LrOSDeleteAsyncNoRetrySucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetryFailed(
    options?: LrOSDeleteAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteAsyncRetryFailedResponse>,
      LrOSDeleteAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetryFailedAndWait(
    options?: LrOSDeleteAsyncRetryFailedOptionalParams
  ): Promise<LrOSDeleteAsyncRetryFailedResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrycanceled(
    options?: LrOSDeleteAsyncRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSDeleteAsyncRetrycanceledResponse>,
      LrOSDeleteAsyncRetrycanceledResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrycanceledAndWait(
    options?: LrOSDeleteAsyncRetrycanceledOptionalParams
  ): Promise<LrOSDeleteAsyncRetrycanceledResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header.
   * Poll returns a 200 with a response body after success.
   * @param options The options parameters.
   */
  beginPost200WithPayload(
    options?: LrOSPost200WithPayloadOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPost200WithPayloadResponse>,
      LrOSPost200WithPayloadResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header.
   * Poll returns a 200 with a response body after success.
   * @param options The options parameters.
   */
  beginPost200WithPayloadAndWait(
    options?: LrOSPost200WithPayloadOptionalParams
  ): Promise<LrOSPost200WithPayloadResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' and
   * 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200(
    options?: LrOSPost202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPost202Retry200Response>,
      LrOSPost202Retry200Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' and
   * 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200AndWait(
    options?: LrOSPost202Retry200OptionalParams
  ): Promise<LrOSPost202Retry200Response>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header, 204
   * with noresponse body after success
   * @param options The options parameters.
   */
  beginPost202NoRetry204(
    options?: LrOSPost202NoRetry204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPost202NoRetry204Response>,
      LrOSPost202NoRetry204Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header, 204
   * with noresponse body after success
   * @param options The options parameters.
   */
  beginPost202NoRetry204AndWait(
    options?: LrOSPost202NoRetry204OptionalParams
  ): Promise<LrOSPost202NoRetry204Response>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should poll Location to get the final object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalLocationGet(
    options?: LrOSPostDoubleHeadersFinalLocationGetOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostDoubleHeadersFinalLocationGetResponse>,
      LrOSPostDoubleHeadersFinalLocationGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should poll Location to get the final object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalLocationGetAndWait(
    options?: LrOSPostDoubleHeadersFinalLocationGetOptionalParams
  ): Promise<LrOSPostDoubleHeadersFinalLocationGetResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGet(
    options?: LrOSPostDoubleHeadersFinalAzureHeaderGetOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostDoubleHeadersFinalAzureHeaderGetResponse>,
      LrOSPostDoubleHeadersFinalAzureHeaderGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetAndWait(
    options?: LrOSPostDoubleHeadersFinalAzureHeaderGetOptionalParams
  ): Promise<LrOSPostDoubleHeadersFinalAzureHeaderGetResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object if you support initial Autorest behavior.
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetDefault(
    options?: LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultResponse
      >,
      LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object if you support initial Autorest behavior.
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetDefaultAndWait(
    options?: LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams
  ): Promise<LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceeded(
    options?: LrOSPostAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostAsyncRetrySucceededResponse>,
      LrOSPostAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceededAndWait(
    options?: LrOSPostAsyncRetrySucceededOptionalParams
  ): Promise<LrOSPostAsyncRetrySucceededResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncNoRetrySucceeded(
    options?: LrOSPostAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostAsyncNoRetrySucceededResponse>,
      LrOSPostAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncNoRetrySucceededAndWait(
    options?: LrOSPostAsyncNoRetrySucceededOptionalParams
  ): Promise<LrOSPostAsyncNoRetrySucceededResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetryFailed(
    options?: LrOSPostAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostAsyncRetryFailedResponse>,
      LrOSPostAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetryFailedAndWait(
    options?: LrOSPostAsyncRetryFailedOptionalParams
  ): Promise<LrOSPostAsyncRetryFailedResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrycanceled(
    options?: LrOSPostAsyncRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LrOSPostAsyncRetrycanceledResponse>,
      LrOSPostAsyncRetrycanceledResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrycanceledAndWait(
    options?: LrOSPostAsyncRetrycanceledOptionalParams
  ): Promise<LrOSPostAsyncRetrycanceledResponse>;
}
