/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  LroRetrysPut201CreatingSucceeded200OptionalParams,
  LroRetrysPut201CreatingSucceeded200Response,
  LroRetrysPutAsyncRelativeRetrySucceededOptionalParams,
  LroRetrysPutAsyncRelativeRetrySucceededResponse,
  LroRetrysDeleteProvisioning202Accepted200SucceededOptionalParams,
  LroRetrysDeleteProvisioning202Accepted200SucceededResponse,
  LroRetrysDelete202Retry200OptionalParams,
  LroRetrysDelete202Retry200Response,
  LroRetrysDeleteAsyncRelativeRetrySucceededOptionalParams,
  LroRetrysDeleteAsyncRelativeRetrySucceededResponse,
  LroRetrysPost202Retry200OptionalParams,
  LroRetrysPost202Retry200Response,
  LroRetrysPostAsyncRelativeRetrySucceededOptionalParams,
  LroRetrysPostAsyncRelativeRetrySucceededResponse
} from "../models";

/** Interface representing a LroRetrys. */
export interface LroRetrys {
  /**
   * Long running put request, service returns a 500, then a 201 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a
   * ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200(
    options?: LroRetrysPut201CreatingSucceeded200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysPut201CreatingSucceeded200Response>,
      LroRetrysPut201CreatingSucceeded200Response
    >
  >;
  /**
   * Long running put request, service returns a 500, then a 201 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a
   * ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200AndWait(
    options?: LroRetrysPut201CreatingSucceeded200OptionalParams
  ): Promise<LroRetrysPut201CreatingSucceeded200Response>;
  /**
   * Long running put request, service returns a 500, then a 200 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPutAsyncRelativeRetrySucceeded(
    options?: LroRetrysPutAsyncRelativeRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysPutAsyncRelativeRetrySucceededResponse>,
      LroRetrysPutAsyncRelativeRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 500, then a 200 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPutAsyncRelativeRetrySucceededAndWait(
    options?: LroRetrysPutAsyncRelativeRetrySucceededOptionalParams
  ): Promise<LroRetrysPutAsyncRelativeRetrySucceededResponse>;
  /**
   * Long running delete request, service returns a 500, then a  202 to the initial request, with an
   * entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll
   * returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200Succeeded(
    options?: LroRetrysDeleteProvisioning202Accepted200SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        LroRetrysDeleteProvisioning202Accepted200SucceededResponse
      >,
      LroRetrysDeleteProvisioning202Accepted200SucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 500, then a  202 to the initial request, with an
   * entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll
   * returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200SucceededAndWait(
    options?: LroRetrysDeleteProvisioning202Accepted200SucceededOptionalParams
  ): Promise<LroRetrysDeleteProvisioning202Accepted200SucceededResponse>;
  /**
   * Long running delete request, service returns a 500, then a 202 to the initial request. Polls return
   * this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200(
    options?: LroRetrysDelete202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysDelete202Retry200Response>,
      LroRetrysDelete202Retry200Response
    >
  >;
  /**
   * Long running delete request, service returns a 500, then a 202 to the initial request. Polls return
   * this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200AndWait(
    options?: LroRetrysDelete202Retry200OptionalParams
  ): Promise<LroRetrysDelete202Retry200Response>;
  /**
   * Long running delete request, service returns a 500, then a 202 to the initial request. Poll the
   * endpoint indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRelativeRetrySucceeded(
    options?: LroRetrysDeleteAsyncRelativeRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysDeleteAsyncRelativeRetrySucceededResponse>,
      LroRetrysDeleteAsyncRelativeRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 500, then a 202 to the initial request. Poll the
   * endpoint indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRelativeRetrySucceededAndWait(
    options?: LroRetrysDeleteAsyncRelativeRetrySucceededOptionalParams
  ): Promise<LroRetrysDeleteAsyncRelativeRetrySucceededResponse>;
  /**
   * Long running post request, service returns a 500, then a 202 to the initial request, with 'Location'
   * and 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200(
    options?: LroRetrysPost202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysPost202Retry200Response>,
      LroRetrysPost202Retry200Response
    >
  >;
  /**
   * Long running post request, service returns a 500, then a 202 to the initial request, with 'Location'
   * and 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200AndWait(
    options?: LroRetrysPost202Retry200OptionalParams
  ): Promise<LroRetrysPost202Retry200Response>;
  /**
   * Long running post request, service returns a 500, then a 202 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRelativeRetrySucceeded(
    options?: LroRetrysPostAsyncRelativeRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LroRetrysPostAsyncRelativeRetrySucceededResponse>,
      LroRetrysPostAsyncRelativeRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 500, then a 202 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRelativeRetrySucceededAndWait(
    options?: LroRetrysPostAsyncRelativeRetrySucceededOptionalParams
  ): Promise<LroRetrysPostAsyncRelativeRetrySucceededResponse>;
}
