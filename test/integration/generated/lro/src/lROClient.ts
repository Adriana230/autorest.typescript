/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  LrOSImpl,
  LroRetrysImpl,
  LrosaDsImpl,
  LrOSCustomHeaderImpl
} from "./operations";
import {
  LrOS,
  LroRetrys,
  LrosaDs,
  LrOSCustomHeader
} from "./operationsInterfaces";
import { LroClientOptionalParams } from "./models";

export class LroClient extends coreClient.ServiceClient {
  Host: string;

  /**
   * Initializes a new instance of the LroClient class.
   * @param options The parameter options
   */
  constructor(options?: LroClientOptionalParams) {
    // Initializing default values for options
    if (!options) {
      options = {};
    }
    const defaults: LroClientOptionalParams = {
      requestContentType: "application/json; charset=utf-8"
    };

    const packageDetails = `azsdk-js-lro/1.0.0-preview1`;
    const userAgentPrefix =
      options.userAgentOptions && options.userAgentOptions.userAgentPrefix
        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
        : `${packageDetails}`;

    const optionsWithDefaults = {
      ...defaults,
      ...options,
      userAgentOptions: {
        userAgentPrefix
      },
      baseUri: options.endpoint || "http://localhost:3000"
    };
    super(optionsWithDefaults);

    // Assigning values to Constant parameters
    this.Host = options.Host || "http://localhost:3000";
    this.lrOS = new LrOSImpl(this);
    this.lroRetrys = new LroRetrysImpl(this);
    this.lrosaDs = new LrosaDsImpl(this);
    this.lrOSCustomHeader = new LrOSCustomHeaderImpl(this);
  }

  lrOS: LrOS;
  lroRetrys: LroRetrys;
  lrosaDs: LrosaDs;
  lrOSCustomHeader: LrOSCustomHeader;
}
