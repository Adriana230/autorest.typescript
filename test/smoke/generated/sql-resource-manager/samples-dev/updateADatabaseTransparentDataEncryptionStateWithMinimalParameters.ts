/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Updates a logical database's transparent data encryption configuration.
 *
 * @summary Updates a logical database's transparent data encryption configuration.
 */
import {
  LogicalDatabaseTransparentDataEncryption,
  SqlManagementClient
} from "@msinternal/sql-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: SqlManagementClient;
//transparentDataEncryptions.createOrUpdate
async function updateADatabaseTransparentDataEncryptionStateWithMinimalParameters() {
  const resourceGroupName = "securitytde-42-rg";
  const serverName = "securitytde-42";
  const databaseName = "testdb";
  const tdeName = "current";
  const parameters: LogicalDatabaseTransparentDataEncryption = {
    state: "Enabled"
  };
  const result = await client.transparentDataEncryptions.createOrUpdate(
    resourceGroupName,
    serverName,
    databaseName,
    tdeName,
    parameters
  );
  console.log(result);
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-1111-2222-3333-444444444444";
  client = new SqlManagementClient(credential, subscriptionId);
  await updateADatabaseTransparentDataEncryptionStateWithMinimalParameters();
}
main();
