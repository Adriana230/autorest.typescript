/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates a TDE certificate for a given server.
 *
 * @summary Creates a TDE certificate for a given server.
 */
import {
  TdeCertificate,
  SqlManagementClient
} from "@msinternal/sql-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: SqlManagementClient;
//tdeCertificates.beginCreateAndWait
async function uploadATdeCertificate() {
  const resourceGroupName = "testtdecert";
  const serverName = "testtdecert";
  const parameters: TdeCertificate = { privateBlob: "MIIXXXXXXXX" };
  await client.tdeCertificates
    .beginCreateAndWait(resourceGroupName, serverName, parameters)
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-0000-0000-0000-000000000001";
  client = new SqlManagementClient(credential, subscriptionId);
  await uploadATdeCertificate();
}
main();
