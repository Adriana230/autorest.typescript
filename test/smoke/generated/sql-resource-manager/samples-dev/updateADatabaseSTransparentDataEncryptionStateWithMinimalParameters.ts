/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Updates a database's transparent data encryption configuration.
 *
 * @summary Updates a database's transparent data encryption configuration.
 */
import {
  ManagedTransparentDataEncryption,
  SqlManagementClient
} from "@msinternal/sql-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: SqlManagementClient;
//managedDatabaseTransparentDataEncryption.createOrUpdate
async function updateADatabaseSTransparentDataEncryptionStateWithMinimalParameters() {
  const resourceGroupName = "securitytde-42-rg";
  const managedInstanceName = "securitytde-42";
  const databaseName = "testdb";
  const tdeName = "current";
  const parameters: ManagedTransparentDataEncryption = { state: "Enabled" };
  await client.managedDatabaseTransparentDataEncryption
    .createOrUpdate(
      resourceGroupName,
      managedInstanceName,
      databaseName,
      tdeName,
      parameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-1111-2222-3333-444444444444";
  client = new SqlManagementClient(credential, subscriptionId);
  await updateADatabaseSTransparentDataEncryptionStateWithMinimalParameters();
}
main();
