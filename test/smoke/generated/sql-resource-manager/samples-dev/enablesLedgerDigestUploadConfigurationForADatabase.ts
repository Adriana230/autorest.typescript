/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
 *
 * @summary Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
 */
import {
  LedgerDigestUploads,
  SqlManagementClient
} from "@msinternal/sql-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: SqlManagementClient;
//ledgerDigestUploads.beginCreateOrUpdateAndWait
async function enablesLedgerDigestUploadConfigurationForADatabase() {
  const resourceGroupName = "ledgertestrg";
  const serverName = "ledgertestserver";
  const databaseName = "testdb";
  const ledgerDigestUploads = "current";
  const parameters: LedgerDigestUploads = {
    digestStorageEndpoint: "https://MyAccount.blob.core.windows.net"
  };
  await client.ledgerDigestUploads
    .beginCreateOrUpdateAndWait(
      resourceGroupName,
      serverName,
      databaseName,
      ledgerDigestUploads,
      parameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-1111-2222-3333-444444444444";
  client = new SqlManagementClient(credential, subscriptionId);
  await enablesLedgerDigestUploadConfigurationForADatabase();
}
main();
