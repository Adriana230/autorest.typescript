/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Sets a database's long term retention policy.
 *
 * @summary Sets a database's long term retention policy.
 */
import {
  ManagedBackupShortTermRetentionPolicy,
  SqlManagementClient
} from "@msinternal/sql-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: SqlManagementClient;
//managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies.beginUpdateAndWait
async function updateTheShortTermRetentionPolicyForTheRestorableDroppedDatabase() {
  const resourceGroupName = "resourceGroup";
  const managedInstanceName = "testsvr";
  const restorableDroppedDatabaseId = "testdb,131403269876900000";
  const policyName = "default";
  const parameters: ManagedBackupShortTermRetentionPolicy = {};
  await client.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies
    .beginUpdateAndWait(
      resourceGroupName,
      managedInstanceName,
      restorableDroppedDatabaseId,
      policyName,
      parameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-1111-2222-3333-444444444444";
  client = new SqlManagementClient(credential, subscriptionId);
  await updateTheShortTermRetentionPolicyForTheRestorableDroppedDatabase();
}
main();
