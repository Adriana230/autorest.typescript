/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { AzureMetricsDocument as AzureMetricsDocumentMapper } from "../models/mappers";
export const body = {
    parameterPath: "body",
    mapper: AzureMetricsDocumentMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const contentType = {
    parameterPath: "contentType",
    mapper: {
        serializedName: "Content-Type",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentLength = {
    parameterPath: "contentLength",
    mapper: {
        serializedName: "Content-Length",
        required: true,
        type: {
            name: "Number"
        }
    }
};
export const authorization = {
    parameterPath: "authorization",
    mapper: {
        serializedName: "Authorization",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceProvider = {
    parameterPath: "resourceProvider",
    mapper: {
        serializedName: "resourceProvider",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceTypeName = {
    parameterPath: "resourceTypeName",
    mapper: {
        serializedName: "resourceTypeName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map