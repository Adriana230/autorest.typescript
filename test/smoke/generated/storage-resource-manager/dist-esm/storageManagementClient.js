/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { OperationsImpl, SkusImpl, StorageAccountsImpl, UsagesImpl, ManagementPoliciesImpl, PrivateEndpointConnectionsImpl, PrivateLinkResourcesImpl, ObjectReplicationPoliciesImpl, EncryptionScopesImpl, BlobServicesImpl, BlobContainersImpl, FileServicesImpl, FileSharesImpl } from "./operations";
import { StorageManagementClientContext } from "./storageManagementClientContext";
export class StorageManagementClient extends StorageManagementClientContext {
    /**
     * Initializes a new instance of the StorageManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials, subscriptionId, options) {
        super(credentials, subscriptionId, options);
        this.operations = new OperationsImpl(this);
        this.skus = new SkusImpl(this);
        this.storageAccounts = new StorageAccountsImpl(this);
        this.usages = new UsagesImpl(this);
        this.managementPolicies = new ManagementPoliciesImpl(this);
        this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
        this.privateLinkResources = new PrivateLinkResourcesImpl(this);
        this.objectReplicationPolicies = new ObjectReplicationPoliciesImpl(this);
        this.encryptionScopes = new EncryptionScopesImpl(this);
        this.blobServices = new BlobServicesImpl(this);
        this.blobContainers = new BlobContainersImpl(this);
        this.fileServices = new FileServicesImpl(this);
        this.fileShares = new FileSharesImpl(this);
    }
}
//# sourceMappingURL=storageManagementClient.js.map