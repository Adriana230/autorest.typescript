/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            serviceSpecification: {
                serializedName: "properties.serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ServiceSpecification"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceSpecification = {
    type: {
        name: "Composite",
        className: "ServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification"
                        }
                    }
                }
            }
        }
    }
};
export const MetricSpecification = {
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Dimension"
                        }
                    }
                }
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String"
                }
            },
            fillGapWithZero: {
                serializedName: "fillGapWithZero",
                type: {
                    name: "Boolean"
                }
            },
            category: {
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            resourceIdDimensionNameOverride: {
                serializedName: "resourceIdDimensionNameOverride",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Dimension = {
    type: {
        name: "Composite",
        className: "Dimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageSkuListResult = {
    type: {
        name: "Composite",
        className: "StorageSkuListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SkuInformation"
                        }
                    }
                }
            }
        }
    }
};
export const SkuInformation = {
    type: {
        name: "Composite",
        className: "SkuInformation",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Standard", "Premium"]
                }
            },
            resourceType: {
                serializedName: "resourceType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            capabilities: {
                serializedName: "capabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SKUCapability"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Restriction"
                        }
                    }
                }
            }
        }
    }
};
export const SKUCapability = {
    type: {
        name: "Composite",
        className: "SKUCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Restriction = {
    type: {
        name: "Composite",
        className: "Restriction",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageAccountCheckNameAvailabilityParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountCheckNameAvailabilityParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "Microsoft.Storage/storageAccounts",
                isConstant: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CheckNameAvailabilityResult = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResult",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["AccountNameInvalid", "AlreadyExists"]
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageAccountCreateParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountCreateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool"]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            }
        }
    }
};
export const Sku = {
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Standard", "Premium"]
                }
            }
        }
    }
};
export const Identity = {
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "SystemAssigned",
                isConstant: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CustomDomain = {
    type: {
        name: "Composite",
        className: "CustomDomain",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            useSubDomainName: {
                serializedName: "useSubDomainName",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const Encryption = {
    type: {
        name: "Composite",
        className: "Encryption",
        modelProperties: {
            services: {
                serializedName: "services",
                type: {
                    name: "Composite",
                    className: "EncryptionServices"
                }
            },
            keySource: {
                defaultValue: "Microsoft.Storage",
                serializedName: "keySource",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyVaultProperties: {
                serializedName: "keyvaultproperties",
                type: {
                    name: "Composite",
                    className: "KeyVaultProperties"
                }
            }
        }
    }
};
export const EncryptionServices = {
    type: {
        name: "Composite",
        className: "EncryptionServices",
        modelProperties: {
            blob: {
                serializedName: "blob",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            file: {
                serializedName: "file",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            table: {
                serializedName: "table",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            queue: {
                serializedName: "queue",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            }
        }
    }
};
export const EncryptionService = {
    type: {
        name: "Composite",
        className: "EncryptionService",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            lastEnabledTime: {
                serializedName: "lastEnabledTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            keyType: {
                serializedName: "keyType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const KeyVaultProperties = {
    type: {
        name: "Composite",
        className: "KeyVaultProperties",
        modelProperties: {
            keyName: {
                serializedName: "keyname",
                type: {
                    name: "String"
                }
            },
            keyVersion: {
                serializedName: "keyversion",
                type: {
                    name: "String"
                }
            },
            keyVaultUri: {
                serializedName: "keyvaulturi",
                type: {
                    name: "String"
                }
            },
            currentVersionedKeyIdentifier: {
                serializedName: "currentVersionedKeyIdentifier",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lastKeyRotationTimestamp: {
                serializedName: "lastKeyRotationTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const NetworkRuleSet = {
    type: {
        name: "Composite",
        className: "NetworkRuleSet",
        modelProperties: {
            bypass: {
                defaultValue: "AzureServices",
                serializedName: "bypass",
                type: {
                    name: "String"
                }
            },
            virtualNetworkRules: {
                serializedName: "virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            ipRules: {
                serializedName: "ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPRule"
                        }
                    }
                }
            },
            defaultAction: {
                defaultValue: "Allow",
                serializedName: "defaultAction",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Allow", "Deny"]
                }
            }
        }
    }
};
export const VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            virtualNetworkResourceId: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                defaultValue: "Allow",
                isConstant: true,
                serializedName: "action",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "provisioning",
                        "deprovisioning",
                        "succeeded",
                        "failed",
                        "networkSourceDeleted"
                    ]
                }
            }
        }
    }
};
export const IPRule = {
    type: {
        name: "Composite",
        className: "IPRule",
        modelProperties: {
            iPAddressOrRange: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                defaultValue: "Allow",
                isConstant: true,
                serializedName: "action",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AzureFilesIdentityBasedAuthentication = {
    type: {
        name: "Composite",
        className: "AzureFilesIdentityBasedAuthentication",
        modelProperties: {
            directoryServiceOptions: {
                serializedName: "directoryServiceOptions",
                required: true,
                type: {
                    name: "String"
                }
            },
            activeDirectoryProperties: {
                serializedName: "activeDirectoryProperties",
                type: {
                    name: "Composite",
                    className: "ActiveDirectoryProperties"
                }
            }
        }
    }
};
export const ActiveDirectoryProperties = {
    type: {
        name: "Composite",
        className: "ActiveDirectoryProperties",
        modelProperties: {
            domainName: {
                serializedName: "domainName",
                required: true,
                type: {
                    name: "String"
                }
            },
            netBiosDomainName: {
                serializedName: "netBiosDomainName",
                required: true,
                type: {
                    name: "String"
                }
            },
            forestName: {
                serializedName: "forestName",
                required: true,
                type: {
                    name: "String"
                }
            },
            domainGuid: {
                serializedName: "domainGuid",
                required: true,
                type: {
                    name: "String"
                }
            },
            domainSid: {
                serializedName: "domainSid",
                required: true,
                type: {
                    name: "String"
                }
            },
            azureStorageSid: {
                serializedName: "azureStorageSid",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RoutingPreference = {
    type: {
        name: "Composite",
        className: "RoutingPreference",
        modelProperties: {
            routingChoice: {
                serializedName: "routingChoice",
                type: {
                    name: "String"
                }
            },
            publishMicrosoftEndpoints: {
                serializedName: "publishMicrosoftEndpoints",
                type: {
                    name: "Boolean"
                }
            },
            publishInternetEndpoints: {
                serializedName: "publishInternetEndpoints",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Endpoints = {
    type: {
        name: "Composite",
        className: "Endpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queue: {
                serializedName: "queue",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            table: {
                serializedName: "table",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            microsoftEndpoints: {
                serializedName: "microsoftEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountMicrosoftEndpoints"
                }
            },
            internetEndpoints: {
                serializedName: "internetEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountInternetEndpoints"
                }
            }
        }
    }
};
export const StorageAccountMicrosoftEndpoints = {
    type: {
        name: "Composite",
        className: "StorageAccountMicrosoftEndpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queue: {
                serializedName: "queue",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            table: {
                serializedName: "table",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageAccountInternetEndpoints = {
    type: {
        name: "Composite",
        className: "StorageAccountInternetEndpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GeoReplicationStats = {
    type: {
        name: "Composite",
        className: "GeoReplicationStats",
        modelProperties: {
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lastSyncTime: {
                serializedName: "lastSyncTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            canFailover: {
                serializedName: "canFailover",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const PrivateEndpoint = {
    type: {
        name: "Composite",
        className: "PrivateEndpoint",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkServiceConnectionState = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            actionRequired: {
                serializedName: "actionRequired",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobRestoreStatus = {
    type: {
        name: "Composite",
        className: "BlobRestoreStatus",
        modelProperties: {
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            failureReason: {
                serializedName: "failureReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            restoreId: {
                serializedName: "restoreId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "BlobRestoreParameters"
                }
            }
        }
    }
};
export const BlobRestoreParameters = {
    type: {
        name: "Composite",
        className: "BlobRestoreParameters",
        modelProperties: {
            timeToRestore: {
                serializedName: "timeToRestore",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            blobRanges: {
                serializedName: "blobRanges",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobRestoreRange"
                        }
                    }
                }
            }
        }
    }
};
export const BlobRestoreRange = {
    type: {
        name: "Composite",
        className: "BlobRestoreRange",
        modelProperties: {
            startRange: {
                serializedName: "startRange",
                required: true,
                type: {
                    name: "String"
                }
            },
            endRange: {
                serializedName: "endRange",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageAccountUpdateParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool"]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            }
        }
    }
};
export const StorageAccountListResult = {
    type: {
        name: "Composite",
        className: "StorageAccountListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccount"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageAccountListKeysResult = {
    type: {
        name: "Composite",
        className: "StorageAccountListKeysResult",
        modelProperties: {
            keys: {
                serializedName: "keys",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccountKey"
                        }
                    }
                }
            }
        }
    }
};
export const StorageAccountKey = {
    type: {
        name: "Composite",
        className: "StorageAccountKey",
        modelProperties: {
            keyName: {
                serializedName: "keyName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            permissions: {
                serializedName: "permissions",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Read", "Full"]
                }
            }
        }
    }
};
export const StorageAccountRegenerateKeyParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountRegenerateKeyParameters",
        modelProperties: {
            keyName: {
                serializedName: "keyName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageListResult = {
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Count",
                        "Bytes",
                        "Seconds",
                        "Percent",
                        "CountsPerSecond",
                        "BytesPerSecond"
                    ]
                }
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            }
        }
    }
};
export const UsageName = {
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AccountSasParameters = {
    type: {
        name: "Composite",
        className: "AccountSasParameters",
        modelProperties: {
            services: {
                serializedName: "signedServices",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceTypes: {
                serializedName: "signedResourceTypes",
                required: true,
                type: {
                    name: "String"
                }
            },
            permissions: {
                serializedName: "signedPermission",
                required: true,
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: ["https,http", "https"]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ListAccountSasResponse = {
    type: {
        name: "Composite",
        className: "ListAccountSasResponse",
        modelProperties: {
            accountSasToken: {
                serializedName: "accountSasToken",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceSasParameters = {
    type: {
        name: "Composite",
        className: "ServiceSasParameters",
        modelProperties: {
            canonicalizedResource: {
                serializedName: "canonicalizedResource",
                required: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "signedResource",
                type: {
                    name: "String"
                }
            },
            permissions: {
                serializedName: "signedPermission",
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: ["https,http", "https"]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime"
                }
            },
            identifier: {
                constraints: {
                    MaxLength: 64
                },
                serializedName: "signedIdentifier",
                type: {
                    name: "String"
                }
            },
            partitionKeyStart: {
                serializedName: "startPk",
                type: {
                    name: "String"
                }
            },
            partitionKeyEnd: {
                serializedName: "endPk",
                type: {
                    name: "String"
                }
            },
            rowKeyStart: {
                serializedName: "startRk",
                type: {
                    name: "String"
                }
            },
            rowKeyEnd: {
                serializedName: "endRk",
                type: {
                    name: "String"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            },
            cacheControl: {
                serializedName: "rscc",
                type: {
                    name: "String"
                }
            },
            contentDisposition: {
                serializedName: "rscd",
                type: {
                    name: "String"
                }
            },
            contentEncoding: {
                serializedName: "rsce",
                type: {
                    name: "String"
                }
            },
            contentLanguage: {
                serializedName: "rscl",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "rsct",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ListServiceSasResponse = {
    type: {
        name: "Composite",
        className: "ListServiceSasResponse",
        modelProperties: {
            serviceSasToken: {
                serializedName: "serviceSasToken",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagementPolicySchema = {
    type: {
        name: "Composite",
        className: "ManagementPolicySchema",
        modelProperties: {
            rules: {
                serializedName: "rules",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagementPolicyRule"
                        }
                    }
                }
            }
        }
    }
};
export const ManagementPolicyRule = {
    type: {
        name: "Composite",
        className: "ManagementPolicyRule",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            definition: {
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyDefinition"
                }
            }
        }
    }
};
export const ManagementPolicyDefinition = {
    type: {
        name: "Composite",
        className: "ManagementPolicyDefinition",
        modelProperties: {
            actions: {
                serializedName: "actions",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyAction"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyFilter"
                }
            }
        }
    }
};
export const ManagementPolicyAction = {
    type: {
        name: "Composite",
        className: "ManagementPolicyAction",
        modelProperties: {
            baseBlob: {
                serializedName: "baseBlob",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyBaseBlob"
                }
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySnapShot"
                }
            }
        }
    }
};
export const ManagementPolicyBaseBlob = {
    type: {
        name: "Composite",
        className: "ManagementPolicyBaseBlob",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            delete: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            }
        }
    }
};
export const DateAfterModification = {
    type: {
        name: "Composite",
        className: "DateAfterModification",
        modelProperties: {
            daysAfterModificationGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1
                },
                serializedName: "daysAfterModificationGreaterThan",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ManagementPolicySnapShot = {
    type: {
        name: "Composite",
        className: "ManagementPolicySnapShot",
        modelProperties: {
            delete: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            }
        }
    }
};
export const DateAfterCreation = {
    type: {
        name: "Composite",
        className: "DateAfterCreation",
        modelProperties: {
            daysAfterCreationGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1
                },
                serializedName: "daysAfterCreationGreaterThan",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ManagementPolicyFilter = {
    type: {
        name: "Composite",
        className: "ManagementPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobTypes: {
                serializedName: "blobTypes",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobIndexMatch: {
                serializedName: "blobIndexMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagFilter"
                        }
                    }
                }
            }
        }
    }
};
export const TagFilter = {
    type: {
        name: "Composite",
        className: "TagFilter",
        modelProperties: {
            name: {
                constraints: {
                    MaxLength: 128,
                    MinLength: 1
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            op: {
                serializedName: "op",
                required: true,
                type: {
                    name: "String"
                }
            },
            value: {
                constraints: {
                    MaxLength: 256
                },
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResourceListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            }
        }
    }
};
export const ObjectReplicationPoliciesDef = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPoliciesDef",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicy"
                        }
                    }
                }
            }
        }
    }
};
export const ObjectReplicationPolicyRule = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyRule",
        modelProperties: {
            ruleId: {
                serializedName: "ruleId",
                type: {
                    name: "String"
                }
            },
            sourceContainer: {
                serializedName: "sourceContainer",
                required: true,
                type: {
                    name: "String"
                }
            },
            destinationContainer: {
                serializedName: "destinationContainer",
                required: true,
                type: {
                    name: "String"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ObjectReplicationPolicyFilter"
                }
            }
        }
    }
};
export const ObjectReplicationPolicyFilter = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            minCreationTime: {
                serializedName: "minCreationTime",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EncryptionScopeKeyVaultProperties = {
    type: {
        name: "Composite",
        className: "EncryptionScopeKeyVaultProperties",
        modelProperties: {
            keyUri: {
                serializedName: "keyUri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EncryptionScopeListResult = {
    type: {
        name: "Composite",
        className: "EncryptionScopeListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EncryptionScope"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobServiceItems = {
    type: {
        name: "Composite",
        className: "BlobServiceItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export const CorsRules = {
    type: {
        name: "Composite",
        className: "CorsRules",
        modelProperties: {
            corsRules: {
                serializedName: "corsRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsRule"
                        }
                    }
                }
            }
        }
    }
};
export const CorsRule = {
    type: {
        name: "Composite",
        className: "CorsRule",
        modelProperties: {
            allowedOrigins: {
                serializedName: "allowedOrigins",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedMethods: {
                serializedName: "allowedMethods",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maxAgeInSeconds: {
                serializedName: "maxAgeInSeconds",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exposedHeaders: {
                serializedName: "exposedHeaders",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedHeaders: {
                serializedName: "allowedHeaders",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const DeleteRetentionPolicy = {
    type: {
        name: "Composite",
        className: "DeleteRetentionPolicy",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            days: {
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                serializedName: "days",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ChangeFeed = {
    type: {
        name: "Composite",
        className: "ChangeFeed",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const RestorePolicyProperties = {
    type: {
        name: "Composite",
        className: "RestorePolicyProperties",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean"
                }
            },
            days: {
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                serializedName: "days",
                type: {
                    name: "Number"
                }
            },
            lastEnabledTime: {
                serializedName: "lastEnabledTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ListContainerItems = {
    type: {
        name: "Composite",
        className: "ListContainerItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListContainerItem"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ImmutabilityPolicyProperties = {
    type: {
        name: "Composite",
        className: "ImmutabilityPolicyProperties",
        modelProperties: {
            etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            updateHistory: {
                serializedName: "updateHistory",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpdateHistoryProperty"
                        }
                    }
                }
            },
            immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            },
            state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const UpdateHistoryProperty = {
    type: {
        name: "Composite",
        className: "UpdateHistoryProperty",
        modelProperties: {
            update: {
                serializedName: "update",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            immutabilityPeriodSinceCreationInDays: {
                serializedName: "immutabilityPeriodSinceCreationInDays",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                serializedName: "objectIdentifier",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            upn: {
                serializedName: "upn",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LegalHoldProperties = {
    type: {
        name: "Composite",
        className: "LegalHoldProperties",
        modelProperties: {
            hasLegalHold: {
                serializedName: "hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagProperty"
                        }
                    }
                }
            }
        }
    }
};
export const TagProperty = {
    type: {
        name: "Composite",
        className: "TagProperty",
        modelProperties: {
            tag: {
                serializedName: "tag",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                serializedName: "objectIdentifier",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            upn: {
                serializedName: "upn",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LegalHold = {
    type: {
        name: "Composite",
        className: "LegalHold",
        modelProperties: {
            hasLegalHold: {
                serializedName: "hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                serializedName: "tags",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        constraints: {
                            MaxLength: 23,
                            MinLength: 3
                        },
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const LeaseContainerRequest = {
    type: {
        name: "Composite",
        className: "LeaseContainerRequest",
        modelProperties: {
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            },
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            breakPeriod: {
                serializedName: "breakPeriod",
                type: {
                    name: "Number"
                }
            },
            leaseDuration: {
                serializedName: "leaseDuration",
                type: {
                    name: "Number"
                }
            },
            proposedLeaseId: {
                serializedName: "proposedLeaseId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LeaseContainerResponse = {
    type: {
        name: "Composite",
        className: "LeaseContainerResponse",
        modelProperties: {
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            leaseTimeSeconds: {
                serializedName: "leaseTimeSeconds",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FileServiceItems = {
    type: {
        name: "Composite",
        className: "FileServiceItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody"
                        }
                    }
                }
            }
        }
    }
};
export const FileShareItems = {
    type: {
        name: "Composite",
        className: "FileShareItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileShareItem"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeletedShare = {
    type: {
        name: "Composite",
        className: "DeletedShare",
        modelProperties: {
            deletedShareName: {
                serializedName: "deletedShareName",
                required: true,
                type: {
                    name: "String"
                }
            },
            deletedShareVersion: {
                serializedName: "deletedShareVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpoint"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionState"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagementPolicy = {
    type: {
        name: "Composite",
        className: "ManagementPolicy",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, policy: {
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySchema"
                }
            } })
    }
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { groupId: {
                serializedName: "properties.groupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requiredMembers: {
                serializedName: "properties.requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, requiredZoneNames: {
                serializedName: "properties.requiredZoneNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const ObjectReplicationPolicy = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicy",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { policyId: {
                serializedName: "properties.policyId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, enabledTime: {
                serializedName: "properties.enabledTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, sourceAccount: {
                serializedName: "properties.sourceAccount",
                type: {
                    name: "String"
                }
            }, destinationAccount: {
                serializedName: "properties.destinationAccount",
                type: {
                    name: "String"
                }
            }, rules: {
                serializedName: "properties.rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicyRule"
                        }
                    }
                }
            } })
    }
};
export const EncryptionScope = {
    type: {
        name: "Composite",
        className: "EncryptionScope",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { source: {
                serializedName: "properties.source",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, keyVaultProperties: {
                serializedName: "properties.keyVaultProperties",
                type: {
                    name: "Composite",
                    className: "EncryptionScopeKeyVaultProperties"
                }
            } })
    }
};
export const BlobServiceProperties = {
    type: {
        name: "Composite",
        className: "BlobServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            }, defaultServiceVersion: {
                serializedName: "properties.defaultServiceVersion",
                type: {
                    name: "String"
                }
            }, deleteRetentionPolicy: {
                serializedName: "properties.deleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            }, isVersioningEnabled: {
                serializedName: "properties.isVersioningEnabled",
                type: {
                    name: "Boolean"
                }
            }, automaticSnapshotPolicyEnabled: {
                serializedName: "properties.automaticSnapshotPolicyEnabled",
                type: {
                    name: "Boolean"
                }
            }, changeFeed: {
                serializedName: "properties.changeFeed",
                type: {
                    name: "Composite",
                    className: "ChangeFeed"
                }
            }, restorePolicy: {
                serializedName: "properties.restorePolicy",
                type: {
                    name: "Composite",
                    className: "RestorePolicyProperties"
                }
            }, containerDeleteRetentionPolicy: {
                serializedName: "properties.containerDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            } })
    }
};
export const AzureEntityResource = {
    type: {
        name: "Composite",
        className: "AzureEntityResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const FileServiceProperties = {
    type: {
        name: "Composite",
        className: "FileServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            }, shareDeleteRetentionPolicy: {
                serializedName: "properties.shareDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            } })
    }
};
export const StorageAccount = {
    type: {
        name: "Composite",
        className: "StorageAccount",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Creating", "ResolvingDNS", "Succeeded"]
                }
            }, primaryEndpoints: {
                serializedName: "properties.primaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, primaryLocation: {
                serializedName: "properties.primaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, statusOfPrimary: {
                serializedName: "properties.statusOfPrimary",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["available", "unavailable"]
                }
            }, lastGeoFailoverTime: {
                serializedName: "properties.lastGeoFailoverTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, secondaryLocation: {
                serializedName: "properties.secondaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, statusOfSecondary: {
                serializedName: "properties.statusOfSecondary",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["available", "unavailable"]
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            }, secondaryEndpoints: {
                serializedName: "properties.secondaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            }, accessTier: {
                serializedName: "properties.accessTier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool"]
                }
            }, azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            }, enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            }, networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            }, isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            }, geoReplicationStats: {
                serializedName: "properties.geoReplicationStats",
                type: {
                    name: "Composite",
                    className: "GeoReplicationStats"
                }
            }, failoverInProgress: {
                serializedName: "properties.failoverInProgress",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }, routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            }, blobRestoreStatus: {
                serializedName: "properties.blobRestoreStatus",
                type: {
                    name: "Composite",
                    className: "BlobRestoreStatus"
                }
            } })
    }
};
export const ListContainerItem = {
    type: {
        name: "Composite",
        className: "ListContainerItem",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String"
                }
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean"
                }
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Container", "Blob", "None"]
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, immutabilityPolicy: {
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                serializedName: "properties.hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                serializedName: "properties.hasImmutabilityPolicy",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const BlobContainer = {
    type: {
        name: "Composite",
        className: "BlobContainer",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String"
                }
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean"
                }
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Container", "Blob", "None"]
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, immutabilityPolicy: {
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                serializedName: "properties.hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                serializedName: "properties.hasImmutabilityPolicy",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ImmutabilityPolicy = {
    type: {
        name: "Composite",
        className: "ImmutabilityPolicy",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const FileShareItem = {
    type: {
        name: "Composite",
        className: "FileShareItem",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, shareQuota: {
                constraints: {
                    InclusiveMaximum: 102400,
                    InclusiveMinimum: 1
                },
                serializedName: "properties.shareQuota",
                type: {
                    name: "Number"
                }
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String"
                }
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String"
                }
            }, accessTierChangeTime: {
                serializedName: "properties.accessTierChangeTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, accessTierStatus: {
                serializedName: "properties.accessTierStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, shareUsageBytes: {
                serializedName: "properties.shareUsageBytes",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const FileShare = {
    type: {
        name: "Composite",
        className: "FileShare",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, shareQuota: {
                constraints: {
                    InclusiveMaximum: 102400,
                    InclusiveMinimum: 1
                },
                serializedName: "properties.shareQuota",
                type: {
                    name: "Number"
                }
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String"
                }
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String"
                }
            }, accessTierChangeTime: {
                serializedName: "properties.accessTierChangeTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, accessTierStatus: {
                serializedName: "properties.accessTierStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, shareUsageBytes: {
                serializedName: "properties.shareUsageBytes",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const BlobContainersCreateOrUpdateImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersCreateOrUpdateImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobContainersGetImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersGetImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobContainersDeleteImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersDeleteImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobContainersLockImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersLockImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BlobContainersExtendImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersExtendImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map