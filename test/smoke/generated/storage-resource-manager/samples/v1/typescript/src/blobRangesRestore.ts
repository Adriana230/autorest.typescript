/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Restore blobs in the specified blob ranges
 *
 * @summary Restore blobs in the specified blob ranges
 */
import {
  BlobRestoreParameters,
  StorageManagementClient
} from "@msinternal/storage-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: StorageManagementClient;
//storageAccounts.beginRestoreBlobRangesAndWait
async function blobRangesRestore() {
  const resourceGroupName = "res9101";
  const accountName = "sto4445";
  const parameters: BlobRestoreParameters = {
    blobRanges: [
      { endRange: "container/blobpath2", startRange: "container/blobpath1" },
      { endRange: "", startRange: "container2/blobpath3" }
    ],
    timeToRestore: new Date("2019-04-20T15:30:00.0000000Z")
  };
  await client.storageAccounts
    .beginRestoreBlobRangesAndWait(resourceGroupName, accountName, parameters)
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "{subscription-id}";
  client = new StorageManagementClient(credential, subscriptionId);
  await blobRangesRestore();
}
main();
