/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates or updates a peering in the specified ExpressRouteCrossConnection.
 *
 * @summary Creates or updates a peering in the specified ExpressRouteCrossConnection.
 */
import {
  ExpressRouteCrossConnectionPeering,
  NetworkManagementClient
} from "@msinternal/network-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: NetworkManagementClient;
//expressRouteCrossConnectionPeerings.beginCreateOrUpdateAndWait
async function expressRouteCrossConnectionBgpPeeringCreate() {
  const resourceGroupName = "CrossConnection-SiliconValley";
  const crossConnectionName = "<circuitServiceKey>";
  const peeringName = "AzurePrivatePeering";
  const peeringParameters: ExpressRouteCrossConnectionPeering = {
    ipv6PeeringConfig: {
      primaryPeerAddressPrefix: "3FFE:FFFF:0:CD30::/126",
      secondaryPeerAddressPrefix: "3FFE:FFFF:0:CD30::4/126"
    },
    peerASN: 200,
    primaryPeerAddressPrefix: "192.168.16.252/30",
    secondaryPeerAddressPrefix: "192.168.18.252/30",
    vlanId: 200
  };
  await client.expressRouteCrossConnectionPeerings
    .beginCreateOrUpdateAndWait(
      resourceGroupName,
      crossConnectionName,
      peeringName,
      peeringParameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new NetworkManagementClient(credential, subscriptionId);
  await expressRouteCrossConnectionBgpPeeringCreate();
}
main();
