/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.
 *
 * @summary Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.
 */
import {
  ApplicationGatewayOnDemandProbe,
  NetworkManagementClient
} from "@msinternal/network-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: NetworkManagementClient;
//applicationGateways.beginBackendHealthOnDemandAndWait
async function testBackendHealth() {
  const resourceGroupName = "rg1";
  const applicationGatewayName = "appgw";
  const probeRequest: ApplicationGatewayOnDemandProbe = {
    path: "/",
    backendAddressPool: {
      id:
        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFAnalyticsPool"
    },
    backendHttpSettings: {
      id:
        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
    },
    pickHostNameFromBackendHttpSettings: true,
    timeout: 30,
    protocol: "Http"
  };
  await client.applicationGateways
    .beginBackendHealthOnDemandAndWait(
      resourceGroupName,
      applicationGatewayName,
      probeRequest
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new NetworkManagementClient(credential, subscriptionId);
  await testBackendHealth();
}
main();
