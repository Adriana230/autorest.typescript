/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.
 *
 * @summary Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.
 */
import {
  VpnGateway,
  NetworkManagementClient
} from "@msinternal/network-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: NetworkManagementClient;
//vpnGateways.beginCreateOrUpdateAndWait
async function vpnGatewayPut() {
  const resourceGroupName = "rg1";
  const gatewayName = "gateway1";
  const vpnGatewayParameters: VpnGateway = {
    bgpSettings: { asn: 65515, peerWeight: 0 },
    connections: [
      {
        name: "vpnConnection1",
        remoteVpnSite: {
          id:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
        },
        vpnLinkConnections: [
          {
            name: "Connection-Link1",
            connectionBandwidth: 200,
            sharedKey: "key",
            vpnConnectionProtocolType: "IKEv2",
            vpnSiteLink: {
              id:
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
            }
          }
        ]
      }
    ],
    location: "westcentralus",
    tags: { key1: "value1" },
    virtualHub: {
      id:
        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
    }
  };
  await client.vpnGateways
    .beginCreateOrUpdateAndWait(
      resourceGroupName,
      gatewayName,
      vpnGatewayParameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new NetworkManagementClient(credential, subscriptionId);
  await vpnGatewayPut();
}
main();
