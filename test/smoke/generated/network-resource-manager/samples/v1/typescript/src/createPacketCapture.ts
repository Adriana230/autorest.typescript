/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Create and start a packet capture on the specified VM.
 *
 * @summary Create and start a packet capture on the specified VM.
 */
import {
  PacketCapture,
  NetworkManagementClient
} from "@msinternal/network-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: NetworkManagementClient;
//packetCaptures.beginCreateAndWait
async function createPacketCapture() {
  const resourceGroupName = "rg1";
  const networkWatcherName = "nw1";
  const packetCaptureName = "pc1";
  const parameters: PacketCapture = {
    bytesToCapturePerPacket: 10000,
    filters: [{ localIPAddress: "10.0.0.4", localPort: "80", protocol: "TCP" }],
    storageLocation: {
      filePath: "D:capturepc1.cap",
      storageId:
        "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
      storagePath:
        "https://mytestaccountname.blob.core.windows.net/capture/pc1.cap"
    },
    target:
      "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
    timeLimitInSeconds: 100,
    totalBytesPerSession: 100000
  };
  await client.packetCaptures
    .beginCreateAndWait(
      resourceGroupName,
      networkWatcherName,
      packetCaptureName,
      parameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new NetworkManagementClient(credential, subscriptionId);
  await createPacketCapture();
}
main();
