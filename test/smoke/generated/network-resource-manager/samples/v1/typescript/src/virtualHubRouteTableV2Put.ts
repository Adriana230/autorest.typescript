/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
 *
 * @summary Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
 */
import {
  VirtualHubRouteTableV2,
  NetworkManagementClient
} from "@msinternal/network-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: NetworkManagementClient;
//virtualHubRouteTableV2S.beginCreateOrUpdateAndWait
async function virtualHubRouteTableV2Put() {
  const resourceGroupName = "rg1";
  const virtualHubName = "virtualHub1";
  const routeTableName = "virtualHubRouteTable1a";
  const virtualHubRouteTableV2Parameters: VirtualHubRouteTableV2 = {
    attachedConnections: ["All_Vnets"],
    routes: [
      {
        destinationType: "CIDR",
        destinations: ["20.10.0.0/16", "20.20.0.0/16"],
        nextHopType: "IPAddress",
        nextHops: ["10.0.0.68"]
      },
      {
        destinationType: "CIDR",
        destinations: ["0.0.0.0/0"],
        nextHopType: "IPAddress",
        nextHops: ["10.0.0.68"]
      }
    ]
  };
  await client.virtualHubRouteTableV2S
    .beginCreateOrUpdateAndWait(
      resourceGroupName,
      virtualHubName,
      routeTableName,
      virtualHubRouteTableV2Parameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new NetworkManagementClient(credential, subscriptionId);
  await virtualHubRouteTableV2Put();
}
main();
