/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates a service.
 *
 * @summary Creates a service.
 */
import {
  ServiceResource,
  CosmosDBManagementClient
} from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//service.beginCreateAndWait
async function dataTransferServiceCreate() {
  const resourceGroupName = "rg1";
  const accountName = "ddb1";
  const serviceName = "DataTransfer";
  const createUpdateParameters: ServiceResource = {
    properties: {
      instanceCount: 1,
      instanceSize: "Cosmos.D4s",
      serviceType: "DataTransfer"
    }
  };
  await client.service
    .beginCreateAndWait(
      resourceGroupName,
      accountName,
      serviceName,
      createUpdateParameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await dataTransferServiceCreate();
}
main();
