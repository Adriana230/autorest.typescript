/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Updates some of the properties of a managed Cassandra cluster.
 *
 * @summary Updates some of the properties of a managed Cassandra cluster.
 */
import {
  ClusterResource,
  CosmosDBManagementClient
} from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//cassandraClusters.beginUpdateAndWait
async function cosmosDbManagedCassandraClusterPatch() {
  const resourceGroupName = "cassandra-prod-rg";
  const clusterName = "cassandra-prod";
  const body: ClusterResource = {
    properties: {
      authenticationMethod: "None",
      externalGossipCertificates: [
        {
          pem:
            "-----BEGIN CERTIFICATE-----\n...Base64 encoded certificate...\n-----END CERTIFICATE-----"
        }
      ],
      externalSeedNodes: [
        { ipAddress: "10.52.221.2" },
        { ipAddress: "10.52.221.3" },
        { ipAddress: "10.52.221.4" }
      ],
      hoursBetweenBackups: 12
    },
    tags: { owner: "mike" }
  };
  await client.cassandraClusters
    .beginUpdateAndWait(resourceGroupName, clusterName, body)
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await cosmosDbManagedCassandraClusterPatch();
}
main();
