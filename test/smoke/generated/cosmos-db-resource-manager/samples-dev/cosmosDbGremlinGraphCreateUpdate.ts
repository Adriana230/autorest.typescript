/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Create or update an Azure Cosmos DB Gremlin graph
 *
 * @summary Create or update an Azure Cosmos DB Gremlin graph
 */
import {
  GremlinGraphCreateUpdateParameters,
  CosmosDBManagementClient
} from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//gremlinResources.beginCreateUpdateGremlinGraphAndWait
async function cosmosDbGremlinGraphCreateUpdate() {
  const resourceGroupName = "rg1";
  const accountName = "ddb1";
  const databaseName = "databaseName";
  const graphName = "graphName";
  const createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters = {
    location: "West US",
    options: {},
    resource: {
      conflictResolutionPolicy: {
        conflictResolutionPath: "/path",
        mode: "LastWriterWins"
      },
      defaultTtl: 100,
      id: "graphName",
      indexingPolicy: {
        automatic: true,
        excludedPaths: [],
        includedPaths: [
          {
            path: "/*",
            indexes: [
              { dataType: "String", kind: "Range", precision: -1 },
              { dataType: "Number", kind: "Range", precision: -1 }
            ]
          }
        ],
        indexingMode: "consistent"
      },
      partitionKey: { kind: "Hash", paths: ["/AccountNumber"] },
      uniqueKeyPolicy: { uniqueKeys: [{ paths: ["/testPath"] }] }
    },
    tags: {}
  };
  await client.gremlinResources
    .beginCreateUpdateGremlinGraphAndWait(
      resourceGroupName,
      accountName,
      databaseName,
      graphName,
      createUpdateGremlinGraphParameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await cosmosDbGremlinGraphCreateUpdate();
}
main();
