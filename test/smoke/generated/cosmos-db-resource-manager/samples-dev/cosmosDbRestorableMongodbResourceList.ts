/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
 *
 * @summary Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
 */
import { CosmosDBManagementClient } from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//restorableMongodbResources.list
async function cosmosDbRestorableMongodbResourceList() {
  const location = "WestUS";
  const instanceId = "d9b26648-2f53-4541-b3d8-3044f4f9810d";
  const restoreLocation = "WestUS";
  const restoreTimestampInUtc = "10/13/2020 4:56";
  const options = {
    restoreLocation: restoreLocation,
    restoreTimestampInUtc: restoreTimestampInUtc
  };
  const resArray = new Array();
  for await (let item of client.restorableMongodbResources.list(
    location,
    instanceId,
    options
  )) {
    resArray.push(item);
  }
  console.log(resArray);
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "2296c272-5d55-40d9-bc05-4d56dc2d7588";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await cosmosDbRestorableMongodbResourceList();
}
main();
