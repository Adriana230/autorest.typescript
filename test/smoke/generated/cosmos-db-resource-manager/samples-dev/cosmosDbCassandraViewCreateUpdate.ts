/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Create or update an Azure Cosmos DB Cassandra View
 *
 * @summary Create or update an Azure Cosmos DB Cassandra View
 */
import {
  CassandraViewCreateUpdateParameters,
  CosmosDBManagementClient
} from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//cassandraResources.beginCreateUpdateCassandraViewAndWait
async function cosmosDbCassandraViewCreateUpdate() {
  const resourceGroupName = "rg1";
  const accountName = "ddb1";
  const keyspaceName = "keyspacename";
  const viewName = "viewname";
  const createUpdateCassandraViewParameters: CassandraViewCreateUpdateParameters = {
    options: {},
    resource: {
      id: "viewname",
      viewDefinition:
        "SELECT columna, columnb, columnc FROM keyspacename.srctablename WHERE columna IS NOT NULL AND columnc IS NOT NULL PRIMARY (columnc, columna)"
    },
    tags: {}
  };
  await client.cassandraResources
    .beginCreateUpdateCassandraViewAndWait(
      resourceGroupName,
      accountName,
      keyspaceName,
      viewName,
      createUpdateCassandraViewParameters
    )
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await cosmosDbCassandraViewCreateUpdate();
}
main();
