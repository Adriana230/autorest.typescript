/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Updates the properties of an existing Azure Cosmos DB database account.
 *
 * @summary Updates the properties of an existing Azure Cosmos DB database account.
 */
import {
  DatabaseAccountUpdateParameters,
  CosmosDBManagementClient
} from "@msinternal/cosmos-db-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: CosmosDBManagementClient;
//databaseAccounts.beginUpdateAndWait
async function cosmosDBDatabaseAccountPatch() {
  const resourceGroupName = "rg1";
  const accountName = "ddb1";
  const updateParameters: DatabaseAccountUpdateParameters = {
    consistencyPolicy: {
      defaultConsistencyLevel: "BoundedStaleness",
      maxIntervalInSeconds: 10,
      maxStalenessPrefix: 200
    },
    ipRangeFilter: "10.10.10.10",
    isVirtualNetworkFilterEnabled: true,
    location: "westus",
    tags: { dept: "finance" },
    virtualNetworkRules: [
      {
        id:
          "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1",
        ignoreMissingVNetServiceEndpoint: false
      }
    ]
  };
  await client.databaseAccounts
    .beginUpdateAndWait(resourceGroupName, accountName, updateParameters)
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "subid";
  client = new CosmosDBManagementClient(credential, subscriptionId);
  await cosmosDBDatabaseAccountPatch();
}
main();
