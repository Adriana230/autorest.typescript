/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link SkuFamily} that the service accepts. */
export var KnownSkuFamily;
(function (KnownSkuFamily) {
    KnownSkuFamily["A"] = "A";
})(KnownSkuFamily || (KnownSkuFamily = {}));
/** Known values of {@link KeyPermissions} that the service accepts. */
export var KnownKeyPermissions;
(function (KnownKeyPermissions) {
    KnownKeyPermissions["Encrypt"] = "encrypt";
    KnownKeyPermissions["Decrypt"] = "decrypt";
    KnownKeyPermissions["WrapKey"] = "wrapKey";
    KnownKeyPermissions["UnwrapKey"] = "unwrapKey";
    KnownKeyPermissions["Sign"] = "sign";
    KnownKeyPermissions["Verify"] = "verify";
    KnownKeyPermissions["Get"] = "get";
    KnownKeyPermissions["List"] = "list";
    KnownKeyPermissions["Create"] = "create";
    KnownKeyPermissions["Update"] = "update";
    KnownKeyPermissions["Import"] = "import";
    KnownKeyPermissions["Delete"] = "delete";
    KnownKeyPermissions["Backup"] = "backup";
    KnownKeyPermissions["Restore"] = "restore";
    KnownKeyPermissions["Recover"] = "recover";
    KnownKeyPermissions["Purge"] = "purge";
})(KnownKeyPermissions || (KnownKeyPermissions = {}));
/** Known values of {@link SecretPermissions} that the service accepts. */
export var KnownSecretPermissions;
(function (KnownSecretPermissions) {
    KnownSecretPermissions["Get"] = "get";
    KnownSecretPermissions["List"] = "list";
    KnownSecretPermissions["Set"] = "set";
    KnownSecretPermissions["Delete"] = "delete";
    KnownSecretPermissions["Backup"] = "backup";
    KnownSecretPermissions["Restore"] = "restore";
    KnownSecretPermissions["Recover"] = "recover";
    KnownSecretPermissions["Purge"] = "purge";
})(KnownSecretPermissions || (KnownSecretPermissions = {}));
/** Known values of {@link CertificatePermissions} that the service accepts. */
export var KnownCertificatePermissions;
(function (KnownCertificatePermissions) {
    KnownCertificatePermissions["Get"] = "get";
    KnownCertificatePermissions["List"] = "list";
    KnownCertificatePermissions["Delete"] = "delete";
    KnownCertificatePermissions["Create"] = "create";
    KnownCertificatePermissions["Import"] = "import";
    KnownCertificatePermissions["Update"] = "update";
    KnownCertificatePermissions["Managecontacts"] = "managecontacts";
    KnownCertificatePermissions["Getissuers"] = "getissuers";
    KnownCertificatePermissions["Listissuers"] = "listissuers";
    KnownCertificatePermissions["Setissuers"] = "setissuers";
    KnownCertificatePermissions["Deleteissuers"] = "deleteissuers";
    KnownCertificatePermissions["Manageissuers"] = "manageissuers";
    KnownCertificatePermissions["Recover"] = "recover";
    KnownCertificatePermissions["Purge"] = "purge";
    KnownCertificatePermissions["Backup"] = "backup";
    KnownCertificatePermissions["Restore"] = "restore";
})(KnownCertificatePermissions || (KnownCertificatePermissions = {}));
/** Known values of {@link StoragePermissions} that the service accepts. */
export var KnownStoragePermissions;
(function (KnownStoragePermissions) {
    KnownStoragePermissions["Get"] = "get";
    KnownStoragePermissions["List"] = "list";
    KnownStoragePermissions["Delete"] = "delete";
    KnownStoragePermissions["Set"] = "set";
    KnownStoragePermissions["Update"] = "update";
    KnownStoragePermissions["Regeneratekey"] = "regeneratekey";
    KnownStoragePermissions["Recover"] = "recover";
    KnownStoragePermissions["Purge"] = "purge";
    KnownStoragePermissions["Backup"] = "backup";
    KnownStoragePermissions["Restore"] = "restore";
    KnownStoragePermissions["Setsas"] = "setsas";
    KnownStoragePermissions["Listsas"] = "listsas";
    KnownStoragePermissions["Getsas"] = "getsas";
    KnownStoragePermissions["Deletesas"] = "deletesas";
})(KnownStoragePermissions || (KnownStoragePermissions = {}));
/** Known values of {@link NetworkRuleBypassOptions} that the service accepts. */
export var KnownNetworkRuleBypassOptions;
(function (KnownNetworkRuleBypassOptions) {
    KnownNetworkRuleBypassOptions["AzureServices"] = "AzureServices";
    KnownNetworkRuleBypassOptions["None"] = "None";
})(KnownNetworkRuleBypassOptions || (KnownNetworkRuleBypassOptions = {}));
/** Known values of {@link NetworkRuleAction} that the service accepts. */
export var KnownNetworkRuleAction;
(function (KnownNetworkRuleAction) {
    KnownNetworkRuleAction["Allow"] = "Allow";
    KnownNetworkRuleAction["Deny"] = "Deny";
})(KnownNetworkRuleAction || (KnownNetworkRuleAction = {}));
/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointServiceConnectionStatus;
(function (KnownPrivateEndpointServiceConnectionStatus) {
    KnownPrivateEndpointServiceConnectionStatus["Pending"] = "Pending";
    KnownPrivateEndpointServiceConnectionStatus["Approved"] = "Approved";
    KnownPrivateEndpointServiceConnectionStatus["Rejected"] = "Rejected";
    KnownPrivateEndpointServiceConnectionStatus["Disconnected"] = "Disconnected";
})(KnownPrivateEndpointServiceConnectionStatus || (KnownPrivateEndpointServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    KnownPrivateEndpointConnectionProvisioningState["Creating"] = "Creating";
    KnownPrivateEndpointConnectionProvisioningState["Updating"] = "Updating";
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
    KnownPrivateEndpointConnectionProvisioningState["Disconnected"] = "Disconnected";
})(KnownPrivateEndpointConnectionProvisioningState || (KnownPrivateEndpointConnectionProvisioningState = {}));
//# sourceMappingURL=index.js.map