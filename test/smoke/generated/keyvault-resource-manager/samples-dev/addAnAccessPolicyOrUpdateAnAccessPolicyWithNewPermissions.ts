/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Update access policies in a key vault in the specified subscription.
 *
 * @summary Update access policies in a key vault in the specified subscription.
 */
import {
  VaultAccessPolicyParameters,
  KeyVaultManagementClient
} from "@msinternal/keyvault-resource-manager";
import { DefaultAzureCredential } from "@azure/identity";

let client: KeyVaultManagementClient;
//vaults.updateAccessPolicy
async function addAnAccessPolicyOrUpdateAnAccessPolicyWithNewPermissions() {
  const resourceGroupName = "sample-group";
  const vaultName = "sample-vault";
  const operationKind = "add";
  const parameters: VaultAccessPolicyParameters = {
    properties: {
      accessPolicies: [
        {
          objectId: "00000000-0000-0000-0000-000000000000",
          permissions: {
            certificates: ["get"],
            keys: ["encrypt"],
            secrets: ["get"]
          },
          tenantId: "00000000-0000-0000-0000-000000000000"
        }
      ]
    }
  };
  await client.vaults
    .updateAccessPolicy(resourceGroupName, vaultName, operationKind, parameters)
    .then((res) => {
      console.log(res);
    });
}
async function main() {
  const credential = new DefaultAzureCredential();
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  client = new KeyVaultManagementClient(credential, subscriptionId);
  await addAnAccessPolicyOrUpdateAnAccessPolicyWithNewPermissions();
}
main();
